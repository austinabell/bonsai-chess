{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IBonsaiRelay",
          "name": "bonsaiRelay",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_fibImageId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "contract IBonsaiRelay",
          "name": "expected",
          "type": "address"
        },
        {
          "internalType": "contract IBonsaiRelay",
          "name": "found",
          "type": "address"
        }
      ],
      "name": "UnauthorizedCallbackSource",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "expected",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "found",
          "type": "bytes32"
        }
      ],
      "name": "UnexpectedImageId",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevBoard",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "nextBoard",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "move",
          "type": "string"
        }
      ],
      "name": "BoardUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum BonsaiChess.GameState",
          "name": "gameState",
          "type": "uint8"
        }
      ],
      "name": "GameOver",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bonsaiRelay",
      "outputs": [
        {
          "internalType": "contract IBonsaiRelay",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fen",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fibImageId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gameState",
      "outputs": [
        {
          "internalType": "enum BonsaiChess.GameState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "move",
          "type": "string"
        }
      ],
      "name": "makeMove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "prevBoard",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "nextBoard",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "move",
          "type": "string"
        },
        {
          "internalType": "enum BonsaiChess.GameState",
          "name": "state",
          "type": "uint8"
        }
      ],
      "name": "updateBoard",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c06040523480156200001157600080fd5b5060405162000dc038038062000dc0833981016040819052620000349162000081565b6001600160a01b03821660805260a08190526040805160608101909152603880825262000d8860208301396000906200006e908262000162565b50506001805460ff19169055506200022e565b600080604083850312156200009557600080fd5b82516001600160a01b0381168114620000ad57600080fd5b6020939093015192949293505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000e857607f821691505b6020821081036200010957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200015d57600081815260208120601f850160051c81016020861015620001385750805b601f850160051c820191505b81811015620001595782815560010162000144565b5050505b505050565b81516001600160401b038111156200017e576200017e620000bd565b62000196816200018f8454620000d3565b846200010f565b602080601f831160018114620001ce5760008415620001b55750858301515b600019600386901b1c1916600185901b17855562000159565b600085815260208120601f198616915b82811015620001ff57888601518255948401946001909101908401620001de565b50858210156200021e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a051610b136200027560003960008181606c01528181610139015261032001526000818160fd015281816102f10152818161045901526104960152610b136000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806313234edc146100675780632b8f5f95146100a15780639198eb7e146100b6578063945c3ce1146100c9578063d1f9c24d146100de578063e70ffd4b146100f8575b600080fd5b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100b46100af3660046105c4565b610137565b005b6100b46100c4366004610663565b610295565b6100d16103c0565b60405161009891906106f0565b6001546100eb9060ff1681565b6040516100989190610720565b61011f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610098565b7f000000000000000000000000000000000000000000000000000000000000000061016061044e565b610169816104ce565b600060405160200161017b9190610782565b60405160208183030381529060405280519060200120856040516020016101a291906107f8565b60405160208183030381529060405280519060200120146101c5576101c5610814565b60006101d18582610879565b506001805483919060ff1916818360038111156101f0576101f061070a565b02179055507ff3388fec30791fd60e9353738d12531fdb858b30b76af35336bebd79bcb7b4c385858560405161022893929190610939565b60405180910390a1600060015460ff1660038111156102495761024961070a565b1461028e576001546040517fe30a7197f4bcf77a0500f4d49e711083bfc4107c06942bf9ca7dd2d678fefab7916102859160ff90911690610720565b60405180910390a15b5050505050565b600060015460ff1660038111156102ae576102ae61070a565b146102ef5760405162461bcd60e51b815260206004820152600c60248201526b33b0b6b29034b99037bb32b960a11b60448201526064015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e80802a27f000000000000000000000000000000000000000000000000000000000000000060008460405160200161035392919061097c565b60408051601f19818403018152908290526001600160e01b031960e085901b16825261039292913090632b8f5f9560e01b90620186a090600401610a1b565b600060405180830381600087803b1580156103ac57600080fd5b505af115801561028e573d6000803e3d6000fd5b600080546103cd90610748565b80601f01602080910402602001604051908101604052809291908181526020018280546103f990610748565b80156104465780601f1061041b57610100808354040283529160200191610446565b820191906000526020600020905b81548152906001019060200180831161042957829003601f168201915b505050505081565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681146104cb5760405163432e033760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152821660248201526044016102e6565b50565b600080366104dd602082610a6e565b6104e8928290610a95565b6104f191610abf565b905080821461051d57604051630be5472b60e41b815260048101839052602481018290526044016102e6565b5050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261054857600080fd5b813567ffffffffffffffff8082111561056357610563610521565b604051601f8301601f19908116603f0116810190828211818310171561058b5761058b610521565b816040528381528660208588010111156105a457600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080608085870312156105da57600080fd5b843567ffffffffffffffff808211156105f257600080fd5b6105fe88838901610537565b9550602087013591508082111561061457600080fd5b61062088838901610537565b9450604087013591508082111561063657600080fd5b5061064387828801610537565b92505060608501356004811061065857600080fd5b939692955090935050565b60006020828403121561067557600080fd5b813567ffffffffffffffff81111561068c57600080fd5b61069884828501610537565b949350505050565b60005b838110156106bb5781810151838201526020016106a3565b50506000910152565b600081518084526106dc8160208601602086016106a0565b601f01601f19169290920160200192915050565b60208152600061070360208301846106c4565b9392505050565b634e487b7160e01b600052602160045260246000fd5b602081016004831061074257634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c9082168061075c57607f821691505b60208210810361077c57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835461079081610748565b600182811680156107a857600181146107bd576107ec565b60ff19841687528215158302870194506107ec565b8760005260208060002060005b858110156107e35781548a8201529084019082016107ca565b50505082870194505b50929695505050505050565b6000825161080a8184602087016106a0565b9190910192915050565b634e487b7160e01b600052600160045260246000fd5b601f82111561087457600081815260208120601f850160051c810160208610156108515750805b601f850160051c820191505b818110156108705782815560010161085d565b5050505b505050565b815167ffffffffffffffff81111561089357610893610521565b6108a7816108a18454610748565b8461082a565b602080601f8311600181146108dc57600084156108c45750858301515b600019600386901b1c1916600185901b178555610870565b600085815260208120601f198616915b8281101561090b578886015182559484019460019091019084016108ec565b50858210156109295787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60608152600061094c60608301866106c4565b828103602084015261095e81866106c4565b9050828103604084015261097281856106c4565b9695505050505050565b60408152600080845461098e81610748565b80604086015260606001808416600081146109b057600181146109ca576109fb565b60ff1985168884015283151560051b8801830195506109fb565b8960005260208060002060005b868110156109f25781548b82018701529084019082016109d7565b8a018501975050505b50505050508281036020840152610a1281856106c4565b95945050505050565b85815260a060208201526000610a3460a08301876106c4565b6001600160a01b03959095166040830152506001600160e01b031992909216606083015267ffffffffffffffff1660809091015292915050565b81810381811115610a8f57634e487b7160e01b600052601160045260246000fd5b92915050565b60008085851115610aa557600080fd5b83861115610ab257600080fd5b5050820193919092039150565b80356020831015610a8f57600019602084900360031b1b169291505056fea26469706673582212206016565e82e7823dd48578e415b8554a57048be1f06c738c8bd4b9c36e2be75864736f6c63430008140033726e62716b626e722f70707070707070702f382f382f382f382f50505050505050502f524e42514b424e522077204b516b71202d20302031",
    "sourceMap": "1043:2715:0:-:0;;;1726:301;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1257:26:22;;;;1853:24:0::1;::::0;;;1893:88:::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;;::::0;::::1;;1887:3;::::0;:94:::1;::::0;:3;:94:::1;:::i;:::-;-1:-1:-1::0;;1991:9:0::1;:29:::0;;-1:-1:-1;;1991:29:0::1;::::0;;-1:-1:-1;1043:2715:0;;14:373:36;115:6;123;176:2;164:9;155:7;151:23;147:32;144:52;;;192:1;189;182:12;144:52;218:16;;-1:-1:-1;;;;;263:31:36;;253:42;;243:70;;309:1;306;299:12;243:70;377:2;362:18;;;;356:25;332:5;;356:25;;-1:-1:-1;;;14:373:36:o;392:127::-;453:10;448:3;444:20;441:1;434:31;484:4;481:1;474:15;508:4;505:1;498:15;524:380;603:1;599:12;;;;646;;;667:61;;721:4;713:6;709:17;699:27;;667:61;774:2;766:6;763:14;743:18;740:38;737:161;;820:10;815:3;811:20;808:1;801:31;855:4;852:1;845:15;883:4;880:1;873:15;737:161;;524:380;;;:::o;1035:545::-;1137:2;1132:3;1129:11;1126:448;;;1173:1;1198:5;1194:2;1187:17;1243:4;1239:2;1229:19;1313:2;1301:10;1297:19;1294:1;1290:27;1284:4;1280:38;1349:4;1337:10;1334:20;1331:47;;;-1:-1:-1;1372:4:36;1331:47;1427:2;1422:3;1418:12;1415:1;1411:20;1405:4;1401:31;1391:41;;1482:82;1500:2;1493:5;1490:13;1482:82;;;1545:17;;;1526:1;1515:13;1482:82;;;1486:3;;;1126:448;1035:545;;;:::o;1756:1352::-;1876:10;;-1:-1:-1;;;;;1898:30:36;;1895:56;;;1931:18;;:::i;:::-;1960:97;2050:6;2010:38;2042:4;2036:11;2010:38;:::i;:::-;2004:4;1960:97;:::i;:::-;2112:4;;2176:2;2165:14;;2193:1;2188:663;;;;2895:1;2912:6;2909:89;;;-1:-1:-1;2964:19:36;;;2958:26;2909:89;-1:-1:-1;;1713:1:36;1709:11;;;1705:24;1701:29;1691:40;1737:1;1733:11;;;1688:57;3011:81;;2158:944;;2188:663;982:1;975:14;;;1019:4;1006:18;;-1:-1:-1;;2224:20:36;;;2342:236;2356:7;2353:1;2350:14;2342:236;;;2445:19;;;2439:26;2424:42;;2537:27;;;;2505:1;2493:14;;;;2372:19;;2342:236;;;2346:3;2606:6;2597:7;2594:19;2591:201;;;2667:19;;;2661:26;-1:-1:-1;;2750:1:36;2746:14;;;2762:3;2742:24;2738:37;2734:42;2719:58;2704:74;;2591:201;-1:-1:-1;;;;;2838:1:36;2822:14;;;2818:22;2805:36;;-1:-1:-1;1756:1352:36:o;3113:127::-;1043:2715:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806313234edc146100675780632b8f5f95146100a15780639198eb7e146100b6578063945c3ce1146100c9578063d1f9c24d146100de578063e70ffd4b146100f8575b600080fd5b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100b46100af3660046105c4565b610137565b005b6100b46100c4366004610663565b610295565b6100d16103c0565b60405161009891906106f0565b6001546100eb9060ff1681565b6040516100989190610720565b61011f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610098565b7f000000000000000000000000000000000000000000000000000000000000000061016061044e565b610169816104ce565b600060405160200161017b9190610782565b60405160208183030381529060405280519060200120856040516020016101a291906107f8565b60405160208183030381529060405280519060200120146101c5576101c5610814565b60006101d18582610879565b506001805483919060ff1916818360038111156101f0576101f061070a565b02179055507ff3388fec30791fd60e9353738d12531fdb858b30b76af35336bebd79bcb7b4c385858560405161022893929190610939565b60405180910390a1600060015460ff1660038111156102495761024961070a565b1461028e576001546040517fe30a7197f4bcf77a0500f4d49e711083bfc4107c06942bf9ca7dd2d678fefab7916102859160ff90911690610720565b60405180910390a15b5050505050565b600060015460ff1660038111156102ae576102ae61070a565b146102ef5760405162461bcd60e51b815260206004820152600c60248201526b33b0b6b29034b99037bb32b960a11b60448201526064015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e80802a27f000000000000000000000000000000000000000000000000000000000000000060008460405160200161035392919061097c565b60408051601f19818403018152908290526001600160e01b031960e085901b16825261039292913090632b8f5f9560e01b90620186a090600401610a1b565b600060405180830381600087803b1580156103ac57600080fd5b505af115801561028e573d6000803e3d6000fd5b600080546103cd90610748565b80601f01602080910402602001604051908101604052809291908181526020018280546103f990610748565b80156104465780601f1061041b57610100808354040283529160200191610446565b820191906000526020600020905b81548152906001019060200180831161042957829003601f168201915b505050505081565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681146104cb5760405163432e033760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152821660248201526044016102e6565b50565b600080366104dd602082610a6e565b6104e8928290610a95565b6104f191610abf565b905080821461051d57604051630be5472b60e41b815260048101839052602481018290526044016102e6565b5050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261054857600080fd5b813567ffffffffffffffff8082111561056357610563610521565b604051601f8301601f19908116603f0116810190828211818310171561058b5761058b610521565b816040528381528660208588010111156105a457600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080608085870312156105da57600080fd5b843567ffffffffffffffff808211156105f257600080fd5b6105fe88838901610537565b9550602087013591508082111561061457600080fd5b61062088838901610537565b9450604087013591508082111561063657600080fd5b5061064387828801610537565b92505060608501356004811061065857600080fd5b939692955090935050565b60006020828403121561067557600080fd5b813567ffffffffffffffff81111561068c57600080fd5b61069884828501610537565b949350505050565b60005b838110156106bb5781810151838201526020016106a3565b50506000910152565b600081518084526106dc8160208601602086016106a0565b601f01601f19169290920160200192915050565b60208152600061070360208301846106c4565b9392505050565b634e487b7160e01b600052602160045260246000fd5b602081016004831061074257634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c9082168061075c57607f821691505b60208210810361077c57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835461079081610748565b600182811680156107a857600181146107bd576107ec565b60ff19841687528215158302870194506107ec565b8760005260208060002060005b858110156107e35781548a8201529084019082016107ca565b50505082870194505b50929695505050505050565b6000825161080a8184602087016106a0565b9190910192915050565b634e487b7160e01b600052600160045260246000fd5b601f82111561087457600081815260208120601f850160051c810160208610156108515750805b601f850160051c820191505b818110156108705782815560010161085d565b5050505b505050565b815167ffffffffffffffff81111561089357610893610521565b6108a7816108a18454610748565b8461082a565b602080601f8311600181146108dc57600084156108c45750858301515b600019600386901b1c1916600185901b178555610870565b600085815260208120601f198616915b8281101561090b578886015182559484019460019091019084016108ec565b50858210156109295787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60608152600061094c60608301866106c4565b828103602084015261095e81866106c4565b9050828103604084015261097281856106c4565b9695505050505050565b60408152600080845461098e81610748565b80604086015260606001808416600081146109b057600181146109ca576109fb565b60ff1985168884015283151560051b8801830195506109fb565b8960005260208060002060005b868110156109f25781548b82018701529084019082016109d7565b8a018501975050505b50505050508281036020840152610a1281856106c4565b95945050505050565b85815260a060208201526000610a3460a08301876106c4565b6001600160a01b03959095166040830152506001600160e01b031992909216606083015267ffffffffffffffff1660809091015292915050565b81810381811115610a8f57634e487b7160e01b600052601160045260246000fd5b92915050565b60008085851115610aa557600080fd5b83861115610ab257600080fd5b5050820193919092039150565b80356020831015610a8f57600019602084900360031b1b169291505056fea26469706673582212206016565e82e7823dd48578e415b8554a57048be1f06c738c8bd4b9c36e2be75864736f6c63430008140033",
    "sourceMap": "1043:2715:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1357:35;;;;;;;;160:25:36;;;148:2;133:18;1357:35:0;;;;;;;;2234:656;;;;;;:::i;:::-;;:::i;:::-;;3399:357;;;;;;:::i;:::-;;:::i;1141:17::-;;;:::i;:::-;;;;;;;:::i;1249:26::-;;;;;;;;;;;;;;;;:::i;856:41:22:-;;;;;;;;-1:-1:-1;;;;;3703:32:36;;;3685:51;;3673:2;3658:18;856:41:22;3517:225:36;2234:656:0;2408:10;2154:22:22;:20;:22::i;:::-;2186:39;2209:15;2186:22;:39::i;:::-;2631:3:0::1;2614:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;2604:32;;;;;;2573:9;2556:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;2546:38;;;;;;:90;2526:120;;;;:::i;:::-;2691:3;:15;2697:9:::0;2691:3;:15:::1;:::i;:::-;-1:-1:-1::0;2716:9:0::1;:17:::0;;2728:5;;2716:9;-1:-1:-1;;2716:17:0::1;:9:::0;2728:5;2716:17:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;2749:40;2762:9;2773;2784:4;2749:40;;;;;;;;:::i;:::-;;;;;;;;2816:17;2803:9;::::0;::::1;;:30;::::0;::::1;;;;;;:::i;:::-;;2799:85;;2863:9;::::0;2854:19:::1;::::0;::::1;::::0;::::1;::::0;2863:9:::1;::::0;;::::1;::::0;2854:19:::1;:::i;:::-;;;;;;;;2799:85;2234:656:::0;;;;;:::o;3399:357::-;3473:17;3460:9;;;;:30;;;;;;;;:::i;:::-;;3456:83;;3506:22;;-1:-1:-1;;;3506:22:0;;8362:2:36;3506:22:0;;;8344:21:36;8401:2;8381:18;;;8374:30;-1:-1:-1;;;8420:18:36;;;8413:42;8472:18;;3506:22:0;;;;;;;;3456:83;3548:11;-1:-1:-1;;;;;3548:27:0;;3589:10;3624:3;3629:4;3613:21;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3613:21:0;;;;;;;;;;-1:-1:-1;;;;;;3675:25:0;3548:201;;;;;;;;;3656:4;;-1:-1:-1;;;3675:25:0;1606:6;;3548:201;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1141:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1369:257:22:-;1471:10;-1:-1:-1;;;;;1517:11:22;1496:32;;;1492:128;;1551:58;;-1:-1:-1;;;1551:58:22;;-1:-1:-1;;;;;1578:11:22;10466:15:36;;1551:58:22;;;10448:34:36;10518:15;;10498:18;;;10491:43;10383:18;;1551:58:22;10192:348:36;1492:128:22;1415:211;1369:257::o;1701:277::-;1782:20;;1813:8;1822:20;1840:2;1813:8;1822:20;:::i;:::-;1813:31;;;;;:::i;:::-;1805:40;;;:::i;:::-;1782:63;;1878:12;1859:15;:31;1855:117;;1913:48;;-1:-1:-1;;;1913:48:22;;;;;11545:25:36;;;11586:18;;;11579:34;;;11518:18;;1913:48:22;11371:248:36;1855:117:22;1772:206;1701:277;:::o;196:127:36:-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:719;371:5;424:3;417:4;409:6;405:17;401:27;391:55;;442:1;439;432:12;391:55;478:6;465:20;504:18;541:2;537;534:10;531:36;;;547:18;;:::i;:::-;622:2;616:9;590:2;676:13;;-1:-1:-1;;672:22:36;;;696:2;668:31;664:40;652:53;;;720:18;;;740:22;;;717:46;714:72;;;766:18;;:::i;:::-;806:10;802:2;795:22;841:2;833:6;826:18;887:3;880:4;875:2;867:6;863:15;859:26;856:35;853:55;;;904:1;901;894:12;853:55;968:2;961:4;953:6;949:17;942:4;934:6;930:17;917:54;1015:1;1008:4;1003:2;995:6;991:15;987:26;980:37;1035:6;1026:15;;;;;;328:719;;;;:::o;1052:900::-;1180:6;1188;1196;1204;1257:3;1245:9;1236:7;1232:23;1228:33;1225:53;;;1274:1;1271;1264:12;1225:53;1314:9;1301:23;1343:18;1384:2;1376:6;1373:14;1370:34;;;1400:1;1397;1390:12;1370:34;1423:50;1465:7;1456:6;1445:9;1441:22;1423:50;:::i;:::-;1413:60;;1526:2;1515:9;1511:18;1498:32;1482:48;;1555:2;1545:8;1542:16;1539:36;;;1571:1;1568;1561:12;1539:36;1594:52;1638:7;1627:8;1616:9;1612:24;1594:52;:::i;:::-;1584:62;;1699:2;1688:9;1684:18;1671:32;1655:48;;1728:2;1718:8;1715:16;1712:36;;;1744:1;1741;1734:12;1712:36;;1767:52;1811:7;1800:8;1789:9;1785:24;1767:52;:::i;:::-;1757:62;;;1869:2;1858:9;1854:18;1841:32;1902:1;1895:5;1892:12;1882:40;;1918:1;1915;1908:12;1882:40;1052:900;;;;-1:-1:-1;1052:900:36;;-1:-1:-1;;1052:900:36:o;1957:322::-;2026:6;2079:2;2067:9;2058:7;2054:23;2050:32;2047:52;;;2095:1;2092;2085:12;2047:52;2135:9;2122:23;2168:18;2160:6;2157:30;2154:50;;;2200:1;2197;2190:12;2154:50;2223;2265:7;2256:6;2245:9;2241:22;2223:50;:::i;:::-;2213:60;1957:322;-1:-1:-1;;;;1957:322:36:o;2284:250::-;2369:1;2379:113;2393:6;2390:1;2387:13;2379:113;;;2469:11;;;2463:18;2450:11;;;2443:39;2415:2;2408:10;2379:113;;;-1:-1:-1;;2526:1:36;2508:16;;2501:27;2284:250::o;2539:271::-;2581:3;2619:5;2613:12;2646:6;2641:3;2634:19;2662:76;2731:6;2724:4;2719:3;2715:14;2708:4;2701:5;2697:16;2662:76;:::i;:::-;2792:2;2771:15;-1:-1:-1;;2767:29:36;2758:39;;;;2799:4;2754:50;;2539:271;-1:-1:-1;;2539:271:36:o;2815:220::-;2964:2;2953:9;2946:21;2927:4;2984:45;3025:2;3014:9;3010:18;3002:6;2984:45;:::i;:::-;2976:53;2815:220;-1:-1:-1;;;2815:220:36:o;3040:127::-;3101:10;3096:3;3092:20;3089:1;3082:31;3132:4;3129:1;3122:15;3156:4;3153:1;3146:15;3172:340;3316:2;3301:18;;3349:1;3338:13;;3328:144;;3394:10;3389:3;3385:20;3382:1;3375:31;3429:4;3426:1;3419:15;3457:4;3454:1;3447:15;3328:144;3481:25;;;3172:340;:::o;3747:380::-;3826:1;3822:12;;;;3869;;;3890:61;;3944:4;3936:6;3932:17;3922:27;;3890:61;3997:2;3989:6;3986:14;3966:18;3963:38;3960:161;;4043:10;4038:3;4034:20;4031:1;4024:31;4078:4;4075:1;4068:15;4106:4;4103:1;4096:15;3960:161;;3747:380;;;:::o;4258:842::-;4386:3;4415:1;4448:6;4442:13;4478:36;4504:9;4478:36;:::i;:::-;4533:1;4550:18;;;4577:133;;;;4724:1;4719:356;;;;4543:532;;4577:133;-1:-1:-1;;4610:24:36;;4598:37;;4683:14;;4676:22;4664:35;;4655:45;;;-1:-1:-1;4577:133:36;;4719:356;4750:6;4747:1;4740:17;4780:4;4825:2;4822:1;4812:16;4850:1;4864:165;4878:6;4875:1;4872:13;4864:165;;;4956:14;;4943:11;;;4936:35;4999:16;;;;4893:10;;4864:165;;;4868:3;;;5058:6;5053:3;5049:16;5042:23;;4543:532;-1:-1:-1;5091:3:36;;4258:842;-1:-1:-1;;;;;;4258:842:36:o;5105:289::-;5236:3;5274:6;5268:13;5290:66;5349:6;5344:3;5337:4;5329:6;5325:17;5290:66;:::i;:::-;5372:16;;;;;5105:289;-1:-1:-1;;5105:289:36:o;5399:127::-;5460:10;5455:3;5451:20;5448:1;5441:31;5491:4;5488:1;5481:15;5515:4;5512:1;5505:15;5531:545;5633:2;5628:3;5625:11;5622:448;;;5669:1;5694:5;5690:2;5683:17;5739:4;5735:2;5725:19;5809:2;5797:10;5793:19;5790:1;5786:27;5780:4;5776:38;5845:4;5833:10;5830:20;5827:47;;;-1:-1:-1;5868:4:36;5827:47;5923:2;5918:3;5914:12;5911:1;5907:20;5901:4;5897:31;5887:41;;5978:82;5996:2;5989:5;5986:13;5978:82;;;6041:17;;;6022:1;6011:13;5978:82;;;5982:3;;;5622:448;5531:545;;;:::o;6252:1352::-;6378:3;6372:10;6405:18;6397:6;6394:30;6391:56;;;6427:18;;:::i;:::-;6456:97;6546:6;6506:38;6538:4;6532:11;6506:38;:::i;:::-;6500:4;6456:97;:::i;:::-;6608:4;;6672:2;6661:14;;6689:1;6684:663;;;;7391:1;7408:6;7405:89;;;-1:-1:-1;7460:19:36;;;7454:26;7405:89;-1:-1:-1;;6209:1:36;6205:11;;;6201:24;6197:29;6187:40;6233:1;6229:11;;;6184:57;7507:81;;6654:944;;6684:663;4205:1;4198:14;;;4242:4;4229:18;;-1:-1:-1;;6720:20:36;;;6838:236;6852:7;6849:1;6846:14;6838:236;;;6941:19;;;6935:26;6920:42;;7033:27;;;;7001:1;6989:14;;;;6868:19;;6838:236;;;6842:3;7102:6;7093:7;7090:19;7087:201;;;7163:19;;;7157:26;-1:-1:-1;;7246:1:36;7242:14;;;7258:3;7238:24;7234:37;7230:42;7215:58;7200:74;;7087:201;-1:-1:-1;;;;;7334:1:36;7318:14;;;7314:22;7301:36;;-1:-1:-1;6252:1352:36:o;7609:546::-;7854:2;7843:9;7836:21;7817:4;7880:45;7921:2;7910:9;7906:18;7898:6;7880:45;:::i;:::-;7973:9;7965:6;7961:22;7956:2;7945:9;7941:18;7934:50;8007:33;8033:6;8025;8007:33;:::i;:::-;7993:47;;8088:9;8080:6;8076:22;8071:2;8060:9;8056:18;8049:50;8116:33;8142:6;8134;8116:33;:::i;:::-;8108:41;7609:546;-1:-1:-1;;;;;;7609:546:36:o;8501:1102::-;8695:2;8684:9;8677:21;8658:4;8718:1;8751:6;8745:13;8781:36;8807:9;8781:36;:::i;:::-;8853:6;8848:2;8837:9;8833:18;8826:34;8879:2;8900:1;8932:2;8921:9;8917:18;8949:1;8944:158;;;;9116:1;9111:381;;;;8910:582;;8944:158;-1:-1:-1;;8992:24:36;;8972:18;;;8965:52;9070:14;;9063:22;9060:1;9056:30;9041:46;;9037:55;;;-1:-1:-1;8944:158:36;;9111:381;9142:6;9139:1;9132:17;9172:4;9217:2;9214:1;9204:16;9242:1;9256:180;9270:6;9267:1;9264:13;9256:180;;;9363:14;;9339:17;;;9335:26;;9328:50;9406:16;;;;9285:10;;9256:180;;;9460:17;;9456:26;;;-1:-1:-1;;;8910:582:36;;;;;;9539:9;9534:3;9530:19;9523:4;9512:9;9508:20;9501:49;9567:30;9593:3;9585:6;9567:30;:::i;:::-;9559:38;8501:1102;-1:-1:-1;;;;;8501:1102:36:o;9608:579::-;9863:6;9852:9;9845:25;9906:3;9901:2;9890:9;9886:18;9879:31;9826:4;9927:46;9968:3;9957:9;9953:19;9945:6;9927:46;:::i;:::-;-1:-1:-1;;;;;10009:32:36;;;;10004:2;9989:18;;9982:60;-1:-1:-1;;;;;;;10078:33:36;;;;10073:2;10058:18;;10051:61;10161:18;10149:31;10143:3;10128:19;;;10121:60;9919:54;9608:579;-1:-1:-1;;9608:579:36:o;10545:225::-;10612:9;;;10633:11;;;10630:134;;;10686:10;10681:3;10677:20;10674:1;10667:31;10721:4;10718:1;10711:15;10749:4;10746:1;10739:15;10630:134;10545:225;;;;:::o;10775:331::-;10880:9;10891;10933:8;10921:10;10918:24;10915:44;;;10955:1;10952;10945:12;10915:44;10984:6;10974:8;10971:20;10968:40;;;11004:1;11001;10994:12;10968:40;-1:-1:-1;;11030:23:36;;;11075:25;;;;;-1:-1:-1;10775:331:36:o;11111:255::-;11231:19;;11270:2;11262:11;;11259:101;;;-1:-1:-1;;11331:2:36;11327:12;;;11324:1;11320:20;11316:33;11305:45;11111:255;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "22": [
        {
          "start": 108,
          "length": 32
        },
        {
          "start": 313,
          "length": 32
        },
        {
          "start": 800,
          "length": 32
        }
      ],
      "31094": [
        {
          "start": 253,
          "length": 32
        },
        {
          "start": 753,
          "length": 32
        },
        {
          "start": 1113,
          "length": 32
        },
        {
          "start": 1174,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "bonsaiRelay()": "e70ffd4b",
    "fen()": "945c3ce1",
    "fibImageId()": "13234edc",
    "gameState()": "d1f9c24d",
    "makeMove(string)": "9198eb7e",
    "updateBoard(string,string,string,uint8)": "2b8f5f95"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBonsaiRelay\",\"name\":\"bonsaiRelay\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_fibImageId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"contract IBonsaiRelay\",\"name\":\"expected\",\"type\":\"address\"},{\"internalType\":\"contract IBonsaiRelay\",\"name\":\"found\",\"type\":\"address\"}],\"name\":\"UnauthorizedCallbackSource\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"found\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedImageId\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevBoard\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"nextBoard\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"move\",\"type\":\"string\"}],\"name\":\"BoardUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum BonsaiChess.GameState\",\"name\":\"gameState\",\"type\":\"uint8\"}],\"name\":\"GameOver\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bonsaiRelay\",\"outputs\":[{\"internalType\":\"contract IBonsaiRelay\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fen\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fibImageId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameState\",\"outputs\":[{\"internalType\":\"enum BonsaiChess.GameState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"move\",\"type\":\"string\"}],\"name\":\"makeMove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"prevBoard\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nextBoard\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"move\",\"type\":\"string\"},{\"internalType\":\"enum BonsaiChess.GameState\",\"name\":\"state\",\"type\":\"uint8\"}],\"name\":\"updateBoard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract demonstrates one pattern for offloading the computation of an expensive\",\"kind\":\"dev\",\"methods\":{\"makeMove(string)\":{\"details\":\"This function sends the request to Bonsai through the on-chain relay.      The request will trigger Bonsai to run the specified RISC Zero guest program with      the given input and asynchronously return the verified results via the callback below.\"}},\"stateVariables\":{\"BONSAI_CALLBACK_GAS_LIMIT\":{\"details\":\"Should be set to the maximum amount of gas your callback might reasonably consume.\"}},\"title\":\"A starter application using Bonsai through the on-chain relay.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initialize the contract, binding it to a specified Bonsai relay and RISC Zero guest image.\"},\"fen()\":{\"notice\":\"board state in FEN notation.\"},\"fibImageId()\":{\"notice\":\"Image ID of the only zkVM binary to accept callbacks from.\"},\"makeMove(string)\":{\"notice\":\"Sends a request to Bonsai generate an engine chess move in response to the move         submitted to this function. This move should be formatted in UCI notation         (e.g. \\\"e2e4\\\", \\\"b1c3\\\").\"},\"updateBoard(string,string,string,uint8)\":{\"notice\":\"Callback function logic for processing verified journals from Bonsai.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BonsaiChess.sol\":\"BonsaiChess\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":bonsai/=lib/risc0/bonsai/ethereum/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":murky_differential_testing/=lib/murky/differential_testing/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":risc0/=lib/risc0/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\"]},\"sources\":{\"contracts/BonsaiChess.sol\":{\"keccak256\":\"0x789f0200224ea1c6937e825c288cfbbbeb5c044010a32b8c74e88c2b96bfe1ad\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://63ff497bc89531640537452dd40fc5246a270a04fd56397a7810e80d80e959b6\",\"dweb:/ipfs/Qme7DHaRF1ScnGQ4eLtHTR18CYh6ft3ovoBeRkck3G4hkP\"]},\"lib/risc0/bonsai/ethereum/contracts/BonsaiCallbackReceiver.sol\":{\"keccak256\":\"0x731a508688c7e6aed6c2b887cf9b78f51bd3d61ab8f33f49d2ae76252002e8b3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0422daeb5bf8307cf426ffb5a772ea4f3acf5270900aa05446e28a995e058797\",\"dweb:/ipfs/QmaSngFoBZtdKBwa2jtk2iSDfod25JvacF3NcpjLN4RgyZ\"]},\"lib/risc0/bonsai/ethereum/contracts/IBonsaiRelay.sol\":{\"keccak256\":\"0x572745471df585157d0bfaca2ddff54880600fe2c86f789721126e2ff233bddf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://10fffd6023d2c63b79d4ae6e92d3d53a9d7f7b16e8208c6335ed6d0415ed5552\",\"dweb:/ipfs/QmR6KxrM6EzC5Rh1qmGrv7A8YAfmp6ZU1tYYW12jfdopKM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IBonsaiRelay",
              "name": "bonsaiRelay",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_fibImageId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "contract IBonsaiRelay",
              "name": "expected",
              "type": "address"
            },
            {
              "internalType": "contract IBonsaiRelay",
              "name": "found",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "UnauthorizedCallbackSource"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "found",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnexpectedImageId"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevBoard",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "nextBoard",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "move",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BoardUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum BonsaiChess.GameState",
              "name": "gameState",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GameOver",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bonsaiRelay",
          "outputs": [
            {
              "internalType": "contract IBonsaiRelay",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fen",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fibImageId",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gameState",
          "outputs": [
            {
              "internalType": "enum BonsaiChess.GameState",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "move",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeMove"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevBoard",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "nextBoard",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "move",
              "type": "string"
            },
            {
              "internalType": "enum BonsaiChess.GameState",
              "name": "state",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateBoard"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "makeMove(string)": {
            "details": "This function sends the request to Bonsai through the on-chain relay.      The request will trigger Bonsai to run the specified RISC Zero guest program with      the given input and asynchronously return the verified results via the callback below."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Initialize the contract, binding it to a specified Bonsai relay and RISC Zero guest image."
          },
          "fen()": {
            "notice": "board state in FEN notation."
          },
          "fibImageId()": {
            "notice": "Image ID of the only zkVM binary to accept callbacks from."
          },
          "makeMove(string)": {
            "notice": "Sends a request to Bonsai generate an engine chess move in response to the move         submitted to this function. This move should be formatted in UCI notation         (e.g. \"e2e4\", \"b1c3\")."
          },
          "updateBoard(string,string,string,uint8)": {
            "notice": "Callback function logic for processing verified journals from Bonsai."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":bonsai/=lib/risc0/bonsai/ethereum/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":murky/=lib/murky/src/",
        ":murky_differential_testing/=lib/murky/differential_testing/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/",
        ":risc0/=lib/risc0/",
        ":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/BonsaiChess.sol": "BonsaiChess"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/BonsaiChess.sol": {
        "keccak256": "0x789f0200224ea1c6937e825c288cfbbbeb5c044010a32b8c74e88c2b96bfe1ad",
        "urls": [
          "bzz-raw://63ff497bc89531640537452dd40fc5246a270a04fd56397a7810e80d80e959b6",
          "dweb:/ipfs/Qme7DHaRF1ScnGQ4eLtHTR18CYh6ft3ovoBeRkck3G4hkP"
        ],
        "license": "Apache-2.0"
      },
      "lib/risc0/bonsai/ethereum/contracts/BonsaiCallbackReceiver.sol": {
        "keccak256": "0x731a508688c7e6aed6c2b887cf9b78f51bd3d61ab8f33f49d2ae76252002e8b3",
        "urls": [
          "bzz-raw://0422daeb5bf8307cf426ffb5a772ea4f3acf5270900aa05446e28a995e058797",
          "dweb:/ipfs/QmaSngFoBZtdKBwa2jtk2iSDfod25JvacF3NcpjLN4RgyZ"
        ],
        "license": "Apache-2.0"
      },
      "lib/risc0/bonsai/ethereum/contracts/IBonsaiRelay.sol": {
        "keccak256": "0x572745471df585157d0bfaca2ddff54880600fe2c86f789721126e2ff233bddf",
        "urls": [
          "bzz-raw://10fffd6023d2c63b79d4ae6e92d3d53a9d7f7b16e8208c6335ed6d0415ed5552",
          "dweb:/ipfs/QmR6KxrM6EzC5Rh1qmGrv7A8YAfmp6ZU1tYYW12jfdopKM"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/BonsaiChess.sol",
    "id": 163,
    "exportedSymbols": {
      "BonsaiCallbackReceiver": [
        31189
      ],
      "BonsaiChess": [
        162
      ],
      "IBonsaiRelay": [
        32624
      ]
    },
    "nodeType": "SourceUnit",
    "src": "635:3124:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "635:24:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "661:53:0",
        "nodes": [],
        "absolutePath": "lib/risc0/bonsai/ethereum/contracts/IBonsaiRelay.sol",
        "file": "bonsai/IBonsaiRelay.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 163,
        "sourceUnit": 32625,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "IBonsaiRelay",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32624,
              "src": "669:12:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "715:73:0",
        "nodes": [],
        "absolutePath": "lib/risc0/bonsai/ethereum/contracts/BonsaiCallbackReceiver.sol",
        "file": "bonsai/BonsaiCallbackReceiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 163,
        "sourceUnit": 31190,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "BonsaiCallbackReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31189,
              "src": "723:22:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 162,
        "nodeType": "ContractDefinition",
        "src": "1043:2715:0",
        "nodes": [
          {
            "id": 11,
            "nodeType": "VariableDeclaration",
            "src": "1141:17:0",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 9,
              "nodeType": "StructuredDocumentation",
              "src": "1096:40:0",
              "text": "@notice board state in FEN notation."
            },
            "functionSelector": "945c3ce1",
            "mutability": "mutable",
            "name": "fen",
            "nameLocation": "1155:3:0",
            "scope": 162,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 10,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1141:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 16,
            "nodeType": "EnumDefinition",
            "src": "1165:79:0",
            "nodes": [],
            "canonicalName": "BonsaiChess.GameState",
            "members": [
              {
                "id": 12,
                "name": "Ongoing",
                "nameLocation": "1190:7:0",
                "nodeType": "EnumValue",
                "src": "1190:7:0"
              },
              {
                "id": 13,
                "name": "Win",
                "nameLocation": "1207:3:0",
                "nodeType": "EnumValue",
                "src": "1207:3:0"
              },
              {
                "id": 14,
                "name": "Lose",
                "nameLocation": "1220:4:0",
                "nodeType": "EnumValue",
                "src": "1220:4:0"
              },
              {
                "id": 15,
                "name": "Draw",
                "nameLocation": "1234:4:0",
                "nodeType": "EnumValue",
                "src": "1234:4:0"
              }
            ],
            "name": "GameState",
            "nameLocation": "1170:9:0"
          },
          {
            "id": 19,
            "nodeType": "VariableDeclaration",
            "src": "1249:26:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "d1f9c24d",
            "mutability": "mutable",
            "name": "gameState",
            "nameLocation": "1266:9:0",
            "scope": 162,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_GameState_$16",
              "typeString": "enum BonsaiChess.GameState"
            },
            "typeName": {
              "id": 18,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 17,
                "name": "GameState",
                "nameLocations": [
                  "1249:9:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16,
                "src": "1249:9:0"
              },
              "referencedDeclaration": 16,
              "src": "1249:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_GameState_$16",
                "typeString": "enum BonsaiChess.GameState"
              }
            },
            "visibility": "public"
          },
          {
            "id": 22,
            "nodeType": "VariableDeclaration",
            "src": "1357:35:0",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 20,
              "nodeType": "StructuredDocumentation",
              "src": "1282:70:0",
              "text": "@notice Image ID of the only zkVM binary to accept callbacks from."
            },
            "functionSelector": "13234edc",
            "mutability": "immutable",
            "name": "fibImageId",
            "nameLocation": "1382:10:0",
            "scope": 162,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 21,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1357:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 26,
            "nodeType": "VariableDeclaration",
            "src": "1554:58:0",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 23,
              "nodeType": "StructuredDocumentation",
              "src": "1399:150:0",
              "text": "@notice Gas limit set on the callback from Bonsai.\n @dev Should be set to the maximum amount of gas your callback might reasonably consume."
            },
            "mutability": "constant",
            "name": "BONSAI_CALLBACK_GAS_LIMIT",
            "nameLocation": "1578:25:0",
            "scope": 162,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 24,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1554:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "313030303030",
              "id": 25,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1606:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000_by_1",
                "typeString": "int_const 100000"
              },
              "value": "100000"
            },
            "visibility": "private"
          },
          {
            "id": 55,
            "nodeType": "FunctionDefinition",
            "src": "1726:301:0",
            "nodes": [],
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "1843:184:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38,
                      "name": "fibImageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1853:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 39,
                      "name": "_fibImageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1866:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1853:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "1853:24:0"
                },
                {
                  "expression": {
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42,
                      "name": "fen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1887:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "726e62716b626e722f70707070707070702f382f382f382f382f50505050505050502f524e42514b424e522077204b516b71202d20302031",
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1913:58:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_0e50e9acadcdd5cb812487617c7e8a6fa097e7a60abf6cd76c9d12c8e132035a",
                            "typeString": "literal_string \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\""
                          },
                          "value": "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_0e50e9acadcdd5cb812487617c7e8a6fa097e7a60abf6cd76c9d12c8e132035a",
                            "typeString": "literal_string \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\""
                          }
                        ],
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1893:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 43,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1893:6:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1893:88:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1887:94:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "1887:94:0"
                },
                {
                  "expression": {
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49,
                      "name": "gameState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1991:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$16",
                        "typeString": "enum BonsaiChess.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 50,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2003:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$16_$",
                          "typeString": "type(enum BonsaiChess.GameState)"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2013:7:0",
                      "memberName": "Ongoing",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "2003:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$16",
                        "typeString": "enum BonsaiChess.GameState"
                      }
                    },
                    "src": "1991:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$16",
                      "typeString": "enum BonsaiChess.GameState"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "1991:29:0"
                }
              ]
            },
            "documentation": {
              "id": 27,
              "nodeType": "StructuredDocumentation",
              "src": "1619:102:0",
              "text": "@notice Initialize the contract, binding it to a specified Bonsai relay and RISC Zero guest image."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 35,
                    "name": "bonsaiRelay",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "1830:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBonsaiRelay_$32624",
                      "typeString": "contract IBonsaiRelay"
                    }
                  }
                ],
                "id": 36,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 34,
                  "name": "BonsaiCallbackReceiver",
                  "nameLocations": [
                    "1807:22:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31189,
                  "src": "1807:22:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1807:35:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "bonsaiRelay",
                  "nameLocation": "1760:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1747:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBonsaiRelay_$32624",
                    "typeString": "contract IBonsaiRelay"
                  },
                  "typeName": {
                    "id": 29,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28,
                      "name": "IBonsaiRelay",
                      "nameLocations": [
                        "1747:12:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32624,
                      "src": "1747:12:0"
                    },
                    "referencedDeclaration": 32624,
                    "src": "1747:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBonsaiRelay_$32624",
                      "typeString": "contract IBonsaiRelay"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_fibImageId",
                  "nameLocation": "1789:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1781:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1781:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1737:69:0"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1843:0:0"
            },
            "scope": 162,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63,
            "nodeType": "EventDefinition",
            "src": "2033:68:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "f3388fec30791fd60e9353738d12531fdb858b30b76af35336bebd79bcb7b4c3",
            "name": "BoardUpdated",
            "nameLocation": "2039:12:0",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "prevBoard",
                  "nameLocation": "2059:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "2052:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2052:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nextBoard",
                  "nameLocation": "2077:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "2070:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2070:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "move",
                  "nameLocation": "2095:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "2088:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2088:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2051:49:0"
            }
          },
          {
            "id": 68,
            "nodeType": "EventDefinition",
            "src": "2106:36:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e30a7197f4bcf77a0500f4d49e711083bfc4107c06942bf9ca7dd2d678fefab7",
            "name": "GameOver",
            "nameLocation": "2112:8:0",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gameState",
                  "nameLocation": "2131:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "2121:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_GameState_$16",
                    "typeString": "enum BonsaiChess.GameState"
                  },
                  "typeName": {
                    "id": 65,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64,
                      "name": "GameState",
                      "nameLocations": [
                        "2121:9:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16,
                      "src": "2121:9:0"
                    },
                    "referencedDeclaration": 16,
                    "src": "2121:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$16",
                      "typeString": "enum BonsaiChess.GameState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2120:21:0"
            }
          },
          {
            "id": 125,
            "nodeType": "FunctionDefinition",
            "src": "2234:656:0",
            "nodes": [],
            "body": {
              "id": 124,
              "nodeType": "Block",
              "src": "2420:470:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 88,
                                  "name": "prevBoard",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 71,
                                  "src": "2573:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 86,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2556:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 87,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2560:12:0",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "2556:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2556:27:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 85,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "2546:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2546:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 94,
                                  "name": "fen",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11,
                                  "src": "2631:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "expression": {
                                  "id": 92,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2614:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 93,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2618:12:0",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "2614:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 95,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2614:21:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 91,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "2604:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 96,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2604:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2546:90:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 84,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2526:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2526:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "2526:120:0"
                },
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100,
                      "name": "fen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2691:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 101,
                      "name": "nextBoard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "2697:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2691:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "2691:15:0"
                },
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 104,
                      "name": "gameState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "2716:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$16",
                        "typeString": "enum BonsaiChess.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 105,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "2728:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$16",
                        "typeString": "enum BonsaiChess.GameState"
                      }
                    },
                    "src": "2716:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$16",
                      "typeString": "enum BonsaiChess.GameState"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "2716:17:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 109,
                        "name": "prevBoard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "2762:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 110,
                        "name": "nextBoard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "2773:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 111,
                        "name": "move",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "2784:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 108,
                      "name": "BoardUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "2749:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory)"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2749:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "EmitStatement",
                  "src": "2744:45:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_GameState_$16",
                      "typeString": "enum BonsaiChess.GameState"
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 114,
                      "name": "gameState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "2803:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$16",
                        "typeString": "enum BonsaiChess.GameState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 115,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2816:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$16_$",
                          "typeString": "type(enum BonsaiChess.GameState)"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2826:7:0",
                      "memberName": "Ongoing",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "2816:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$16",
                        "typeString": "enum BonsaiChess.GameState"
                      }
                    },
                    "src": "2803:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 123,
                  "nodeType": "IfStatement",
                  "src": "2799:85:0",
                  "trueBody": {
                    "id": 122,
                    "nodeType": "Block",
                    "src": "2835:49:0",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 119,
                              "name": "gameState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "2863:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_GameState_$16",
                                "typeString": "enum BonsaiChess.GameState"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_GameState_$16",
                                "typeString": "enum BonsaiChess.GameState"
                              }
                            ],
                            "id": 118,
                            "name": "GameOver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "2854:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_enum$_GameState_$16_$returns$__$",
                              "typeString": "function (enum BonsaiChess.GameState)"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2854:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 121,
                        "nodeType": "EmitStatement",
                        "src": "2849:24:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 69,
              "nodeType": "StructuredDocumentation",
              "src": "2148:81:0",
              "text": "@notice Callback function logic for processing verified journals from Bonsai."
            },
            "functionSelector": "2b8f5f95",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 81,
                    "name": "fibImageId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22,
                    "src": "2408:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 82,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 80,
                  "name": "onlyBonsaiCallback",
                  "nameLocations": [
                    "2389:18:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31188,
                  "src": "2389:18:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2389:30:0"
              }
            ],
            "name": "updateBoard",
            "nameLocation": "2243:11:0",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "prevBoard",
                  "nameLocation": "2278:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2264:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2264:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "nextBoard",
                  "nameLocation": "2311:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2297:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2297:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "move",
                  "nameLocation": "2344:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2330:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2330:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "2368:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "2358:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_GameState_$16",
                    "typeString": "enum BonsaiChess.GameState"
                  },
                  "typeName": {
                    "id": 77,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76,
                      "name": "GameState",
                      "nameLocations": [
                        "2358:9:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16,
                      "src": "2358:9:0"
                    },
                    "referencedDeclaration": 16,
                    "src": "2358:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$16",
                      "typeString": "enum BonsaiChess.GameState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2254:125:0"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2420:0:0"
            },
            "scope": 162,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 161,
            "nodeType": "FunctionDefinition",
            "src": "3399:357:0",
            "nodes": [],
            "body": {
              "id": 160,
              "nodeType": "Block",
              "src": "3446:310:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_GameState_$16",
                      "typeString": "enum BonsaiChess.GameState"
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 131,
                      "name": "gameState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "3460:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$16",
                        "typeString": "enum BonsaiChess.GameState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 132,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "3473:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$16_$",
                          "typeString": "type(enum BonsaiChess.GameState)"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3483:7:0",
                      "memberName": "Ongoing",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "3473:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$16",
                        "typeString": "enum BonsaiChess.GameState"
                      }
                    },
                    "src": "3460:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 140,
                  "nodeType": "IfStatement",
                  "src": "3456:83:0",
                  "trueBody": {
                    "id": 139,
                    "nodeType": "Block",
                    "src": "3492:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "67616d65206973206f766572",
                              "id": 136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3513:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_10c443d150048792860ca4ea2b6f211ed7d459c0c688ae31d72ab9d18710a338",
                                "typeString": "literal_string \"game is over\""
                              },
                              "value": "game is over"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_10c443d150048792860ca4ea2b6f211ed7d459c0c688ae31d72ab9d18710a338",
                                "typeString": "literal_string \"game is over\""
                              }
                            ],
                            "id": 135,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "3506:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3506:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 138,
                        "nodeType": "ExpressionStatement",
                        "src": "3506:22:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 144,
                        "name": "fibImageId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "3589:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 147,
                            "name": "fen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3624:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "id": 148,
                            "name": "move",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "3629:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 145,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3613:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3617:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "3613:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3613:21:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 152,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3656:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BonsaiChess_$162",
                              "typeString": "contract BonsaiChess"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BonsaiChess_$162",
                              "typeString": "contract BonsaiChess"
                            }
                          ],
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3648:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 150,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3648:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3648:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 154,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3675:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BonsaiChess_$162",
                              "typeString": "contract BonsaiChess"
                            }
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3680:11:0",
                          "memberName": "updateBoard",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 125,
                          "src": "3675:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_enum$_GameState_$16_$returns$__$",
                            "typeString": "function (string memory,string memory,string memory,enum BonsaiChess.GameState) external"
                          }
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3692:8:0",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "3675:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 157,
                        "name": "BONSAI_CALLBACK_GAS_LIMIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "3714:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 141,
                        "name": "bonsaiRelay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31094,
                        "src": "3548:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBonsaiRelay_$32624",
                          "typeString": "contract IBonsaiRelay"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3560:15:0",
                      "memberName": "requestCallback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32592,
                      "src": "3548:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_bytes4_$_t_uint64_$returns$__$",
                        "typeString": "function (bytes32,bytes memory,address,bytes4,uint64) external"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3548:201:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "3548:201:0"
                }
              ]
            },
            "documentation": {
              "id": 126,
              "nodeType": "StructuredDocumentation",
              "src": "2896:498:0",
              "text": "@notice Sends a request to Bonsai generate an engine chess move in response to the move\n         submitted to this function. This move should be formatted in UCI notation\n         (e.g. \"e2e4\", \"b1c3\").\n @dev This function sends the request to Bonsai through the on-chain relay.\n      The request will trigger Bonsai to run the specified RISC Zero guest program with\n      the given input and asynchronously return the verified results via the callback below."
            },
            "functionSelector": "9198eb7e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makeMove",
            "nameLocation": "3408:8:0",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "move",
                  "nameLocation": "3431:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "3417:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3417:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3416:20:0"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3446:0:0"
            },
            "scope": 162,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "BonsaiCallbackReceiver",
              "nameLocations": [
                "1067:22:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31189,
              "src": "1067:22:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "1067:22:0"
          }
        ],
        "canonicalName": "BonsaiChess",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "790:169:0",
          "text": "@title A starter application using Bonsai through the on-chain relay.\n @dev This contract demonstrates one pattern for offloading the computation of an expensive"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          162,
          31189
        ],
        "name": "BonsaiChess",
        "nameLocation": "1052:11:0",
        "scope": 163,
        "usedErrors": [
          31100,
          31108
        ],
        "usedEvents": [
          63,
          68
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 0
}