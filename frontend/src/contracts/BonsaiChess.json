{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IBonsaiRelay",
          "name": "bonsaiRelay",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_fibImageId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "contract IBonsaiRelay",
          "name": "expected",
          "type": "address"
        },
        {
          "internalType": "contract IBonsaiRelay",
          "name": "found",
          "type": "address"
        }
      ],
      "name": "UnauthorizedCallbackSource",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "expected",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "found",
          "type": "bytes32"
        }
      ],
      "name": "UnexpectedImageId",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevBoard",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "nextBoard",
          "type": "string"
        }
      ],
      "name": "BoardUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum BonsaiChess.GameState",
          "name": "gameState",
          "type": "uint8"
        }
      ],
      "name": "GameOver",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bonsaiRelay",
      "outputs": [
        {
          "internalType": "contract IBonsaiRelay",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fen",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fibImageId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gameState",
      "outputs": [
        {
          "internalType": "enum BonsaiChess.GameState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "move",
          "type": "string"
        }
      ],
      "name": "makeMove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "prevBoard",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "nextBoard",
          "type": "string"
        },
        {
          "internalType": "enum BonsaiChess.GameState",
          "name": "state",
          "type": "uint8"
        }
      ],
      "name": "updateBoard",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c06040523480156200001157600080fd5b5060405162000d8338038062000d83833981016040819052620000349162000081565b6001600160a01b03821660805260a08190526040805160608101909152603880825262000d4b60208301396000906200006e908262000162565b50506001805460ff19169055506200022e565b600080604083850312156200009557600080fd5b82516001600160a01b0381168114620000ad57600080fd5b6020939093015192949293505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000e857607f821691505b6020821081036200010957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200015d57600081815260208120601f850160051c81016020861015620001385750805b601f850160051c820191505b81811015620001595782815560010162000144565b5050505b505050565b81516001600160401b038111156200017e576200017e620000bd565b62000196816200018f8454620000d3565b846200010f565b602080601f831160018114620001ce5760008415620001b55750858301515b600019600386901b1c1916600185901b17855562000159565b600085815260208120601f198616915b82811015620001ff57888601518255948401946001909101908401620001de565b50858210156200021e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a051610ad66200027560003960008181606c01528181610139015261031d01526000818160fd015281816102ee0152818161045d015261049a0152610ad66000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806313234edc146100675780632e993c83146100a15780639198eb7e146100b6578063945c3ce1146100c9578063d1f9c24d146100de578063e70ffd4b146100f8575b600080fd5b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100b46100af3660046105c8565b610137565b005b6100b46100c4366004610644565b610292565b6100d16103c4565b60405161009891906106d1565b6001546100eb9060ff1681565b6040516100989190610701565b61011f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610098565b7f0000000000000000000000000000000000000000000000000000000000000000610160610452565b610169816104d2565b600060405160200161017b9190610763565b60405160208183030381529060405280519060200120846040516020016101a291906107d9565b60405160208183030381529060405280519060200120146101c5576101c56107f5565b60006101d1848261085a565b506001805483919060ff1916818360038111156101f0576101f06106eb565b02179055507f9a5329d1afc984b4987592b22a021e2385e3dcd38e74fb9f27285948442181f8848460405161022692919061091a565b60405180910390a1600060015460ff166003811115610247576102476106eb565b1461028c576001546040517fe30a7197f4bcf77a0500f4d49e711083bfc4107c06942bf9ca7dd2d678fefab7916102839160ff90911690610701565b60405180910390a15b50505050565b600060015460ff1660038111156102ab576102ab6106eb565b146102ec5760405162461bcd60e51b815260206004820152600c60248201526b33b0b6b29034b99037bb32b960a11b60448201526064015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e80802a27f0000000000000000000000000000000000000000000000000000000000000000600084604051602001610350929190610948565b60408051601f19818403018152908290526001600160e01b031960e085901b16825261038f92913090632e993c8360e01b90620186a0906004016109de565b600060405180830381600087803b1580156103a957600080fd5b505af11580156103bd573d6000803e3d6000fd5b5050505050565b600080546103d190610729565b80601f01602080910402602001604051908101604052809291908181526020018280546103fd90610729565b801561044a5780601f1061041f5761010080835404028352916020019161044a565b820191906000526020600020905b81548152906001019060200180831161042d57829003601f168201915b505050505081565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681146104cf5760405163432e033760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152821660248201526044016102e3565b50565b600080366104e1602082610a31565b6104ec928290610a58565b6104f591610a82565b905080821461052157604051630be5472b60e41b815260048101839052602481018290526044016102e3565b5050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261054c57600080fd5b813567ffffffffffffffff8082111561056757610567610525565b604051601f8301601f19908116603f0116810190828211818310171561058f5761058f610525565b816040528381528660208588010111156105a857600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156105dd57600080fd5b833567ffffffffffffffff808211156105f557600080fd5b6106018783880161053b565b9450602086013591508082111561061757600080fd5b506106248682870161053b565b92505060408401356004811061063957600080fd5b809150509250925092565b60006020828403121561065657600080fd5b813567ffffffffffffffff81111561066d57600080fd5b6106798482850161053b565b949350505050565b60005b8381101561069c578181015183820152602001610684565b50506000910152565b600081518084526106bd816020860160208601610681565b601f01601f19169290920160200192915050565b6020815260006106e460208301846106a5565b9392505050565b634e487b7160e01b600052602160045260246000fd5b602081016004831061072357634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c9082168061073d57607f821691505b60208210810361075d57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835461077181610729565b60018281168015610789576001811461079e576107cd565b60ff19841687528215158302870194506107cd565b8760005260208060002060005b858110156107c45781548a8201529084019082016107ab565b50505082870194505b50929695505050505050565b600082516107eb818460208701610681565b9190910192915050565b634e487b7160e01b600052600160045260246000fd5b601f82111561085557600081815260208120601f850160051c810160208610156108325750805b601f850160051c820191505b818110156108515782815560010161083e565b5050505b505050565b815167ffffffffffffffff81111561087457610874610525565b610888816108828454610729565b8461080b565b602080601f8311600181146108bd57600084156108a55750858301515b600019600386901b1c1916600185901b178555610851565b600085815260208120601f198616915b828110156108ec578886015182559484019460019091019084016108cd565b508582101561090a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60408152600061092d60408301856106a5565b828103602084015261093f81856106a5565b95945050505050565b60408152600080845461095a81610729565b806040860152606060018084166000811461097c5760018114610996576109c7565b60ff1985168884015283151560051b8801830195506109c7565b8960005260208060002060005b868110156109be5781548b82018701529084019082016109a3565b8a018501975050505b5050505050828103602084015261093f81856106a5565b85815260a0602082015260006109f760a08301876106a5565b6001600160a01b03959095166040830152506001600160e01b031992909216606083015267ffffffffffffffff1660809091015292915050565b81810381811115610a5257634e487b7160e01b600052601160045260246000fd5b92915050565b60008085851115610a6857600080fd5b83861115610a7557600080fd5b5050820193919092039150565b80356020831015610a5257600019602084900360031b1b169291505056fea26469706673582212206825a01fd16d34b2e5a60b9ea3edc0676e44782f9ff3f95b10df9db3c80a6e4f64736f6c63430008140033726e62716b626e722f70707070707070702f382f382f382f382f50505050505050502f524e42514b424e522077204b516b71202d20302031",
    "sourceMap": "1043:2668:0:-:0;;;1726:301;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1257:26:22;;;;1853:24:0::1;::::0;;;1893:88:::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;;::::0;::::1;;1887:3;::::0;:94:::1;::::0;:3;:94:::1;:::i;:::-;-1:-1:-1::0;;1991:9:0::1;:29:::0;;-1:-1:-1;;1991:29:0::1;::::0;;-1:-1:-1;1043:2668:0;;14:373:36;115:6;123;176:2;164:9;155:7;151:23;147:32;144:52;;;192:1;189;182:12;144:52;218:16;;-1:-1:-1;;;;;263:31:36;;253:42;;243:70;;309:1;306;299:12;243:70;377:2;362:18;;;;356:25;332:5;;356:25;;-1:-1:-1;;;14:373:36:o;392:127::-;453:10;448:3;444:20;441:1;434:31;484:4;481:1;474:15;508:4;505:1;498:15;524:380;603:1;599:12;;;;646;;;667:61;;721:4;713:6;709:17;699:27;;667:61;774:2;766:6;763:14;743:18;740:38;737:161;;820:10;815:3;811:20;808:1;801:31;855:4;852:1;845:15;883:4;880:1;873:15;737:161;;524:380;;;:::o;1035:545::-;1137:2;1132:3;1129:11;1126:448;;;1173:1;1198:5;1194:2;1187:17;1243:4;1239:2;1229:19;1313:2;1301:10;1297:19;1294:1;1290:27;1284:4;1280:38;1349:4;1337:10;1334:20;1331:47;;;-1:-1:-1;1372:4:36;1331:47;1427:2;1422:3;1418:12;1415:1;1411:20;1405:4;1401:31;1391:41;;1482:82;1500:2;1493:5;1490:13;1482:82;;;1545:17;;;1526:1;1515:13;1482:82;;;1486:3;;;1126:448;1035:545;;;:::o;1756:1352::-;1876:10;;-1:-1:-1;;;;;1898:30:36;;1895:56;;;1931:18;;:::i;:::-;1960:97;2050:6;2010:38;2042:4;2036:11;2010:38;:::i;:::-;2004:4;1960:97;:::i;:::-;2112:4;;2176:2;2165:14;;2193:1;2188:663;;;;2895:1;2912:6;2909:89;;;-1:-1:-1;2964:19:36;;;2958:26;2909:89;-1:-1:-1;;1713:1:36;1709:11;;;1705:24;1701:29;1691:40;1737:1;1733:11;;;1688:57;3011:81;;2158:944;;2188:663;982:1;975:14;;;1019:4;1006:18;;-1:-1:-1;;2224:20:36;;;2342:236;2356:7;2353:1;2350:14;2342:236;;;2445:19;;;2439:26;2424:42;;2537:27;;;;2505:1;2493:14;;;;2372:19;;2342:236;;;2346:3;2606:6;2597:7;2594:19;2591:201;;;2667:19;;;2661:26;-1:-1:-1;;2750:1:36;2746:14;;;2762:3;2742:24;2738:37;2734:42;2719:58;2704:74;;2591:201;-1:-1:-1;;;;;2838:1:36;2822:14;;;2818:22;2805:36;;-1:-1:-1;1756:1352:36:o;3113:127::-;1043:2668:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806313234edc146100675780632e993c83146100a15780639198eb7e146100b6578063945c3ce1146100c9578063d1f9c24d146100de578063e70ffd4b146100f8575b600080fd5b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100b46100af3660046105c8565b610137565b005b6100b46100c4366004610644565b610292565b6100d16103c4565b60405161009891906106d1565b6001546100eb9060ff1681565b6040516100989190610701565b61011f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610098565b7f0000000000000000000000000000000000000000000000000000000000000000610160610452565b610169816104d2565b600060405160200161017b9190610763565b60405160208183030381529060405280519060200120846040516020016101a291906107d9565b60405160208183030381529060405280519060200120146101c5576101c56107f5565b60006101d1848261085a565b506001805483919060ff1916818360038111156101f0576101f06106eb565b02179055507f9a5329d1afc984b4987592b22a021e2385e3dcd38e74fb9f27285948442181f8848460405161022692919061091a565b60405180910390a1600060015460ff166003811115610247576102476106eb565b1461028c576001546040517fe30a7197f4bcf77a0500f4d49e711083bfc4107c06942bf9ca7dd2d678fefab7916102839160ff90911690610701565b60405180910390a15b50505050565b600060015460ff1660038111156102ab576102ab6106eb565b146102ec5760405162461bcd60e51b815260206004820152600c60248201526b33b0b6b29034b99037bb32b960a11b60448201526064015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e80802a27f0000000000000000000000000000000000000000000000000000000000000000600084604051602001610350929190610948565b60408051601f19818403018152908290526001600160e01b031960e085901b16825261038f92913090632e993c8360e01b90620186a0906004016109de565b600060405180830381600087803b1580156103a957600080fd5b505af11580156103bd573d6000803e3d6000fd5b5050505050565b600080546103d190610729565b80601f01602080910402602001604051908101604052809291908181526020018280546103fd90610729565b801561044a5780601f1061041f5761010080835404028352916020019161044a565b820191906000526020600020905b81548152906001019060200180831161042d57829003601f168201915b505050505081565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681146104cf5760405163432e033760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152821660248201526044016102e3565b50565b600080366104e1602082610a31565b6104ec928290610a58565b6104f591610a82565b905080821461052157604051630be5472b60e41b815260048101839052602481018290526044016102e3565b5050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261054c57600080fd5b813567ffffffffffffffff8082111561056757610567610525565b604051601f8301601f19908116603f0116810190828211818310171561058f5761058f610525565b816040528381528660208588010111156105a857600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156105dd57600080fd5b833567ffffffffffffffff808211156105f557600080fd5b6106018783880161053b565b9450602086013591508082111561061757600080fd5b506106248682870161053b565b92505060408401356004811061063957600080fd5b809150509250925092565b60006020828403121561065657600080fd5b813567ffffffffffffffff81111561066d57600080fd5b6106798482850161053b565b949350505050565b60005b8381101561069c578181015183820152602001610684565b50506000910152565b600081518084526106bd816020860160208601610681565b601f01601f19169290920160200192915050565b6020815260006106e460208301846106a5565b9392505050565b634e487b7160e01b600052602160045260246000fd5b602081016004831061072357634e487b7160e01b600052602160045260246000fd5b91905290565b600181811c9082168061073d57607f821691505b60208210810361075d57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835461077181610729565b60018281168015610789576001811461079e576107cd565b60ff19841687528215158302870194506107cd565b8760005260208060002060005b858110156107c45781548a8201529084019082016107ab565b50505082870194505b50929695505050505050565b600082516107eb818460208701610681565b9190910192915050565b634e487b7160e01b600052600160045260246000fd5b601f82111561085557600081815260208120601f850160051c810160208610156108325750805b601f850160051c820191505b818110156108515782815560010161083e565b5050505b505050565b815167ffffffffffffffff81111561087457610874610525565b610888816108828454610729565b8461080b565b602080601f8311600181146108bd57600084156108a55750858301515b600019600386901b1c1916600185901b178555610851565b600085815260208120601f198616915b828110156108ec578886015182559484019460019091019084016108cd565b508582101561090a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60408152600061092d60408301856106a5565b828103602084015261093f81856106a5565b95945050505050565b60408152600080845461095a81610729565b806040860152606060018084166000811461097c5760018114610996576109c7565b60ff1985168884015283151560051b8801830195506109c7565b8960005260208060002060005b868110156109be5781548b82018701529084019082016109a3565b8a018501975050505b5050505050828103602084015261093f81856106a5565b85815260a0602082015260006109f760a08301876106a5565b6001600160a01b03959095166040830152506001600160e01b031992909216606083015267ffffffffffffffff1660809091015292915050565b81810381811115610a5257634e487b7160e01b600052601160045260246000fd5b92915050565b60008085851115610a6857600080fd5b83861115610a7557600080fd5b5050820193919092039150565b80356020831015610a5257600019602084900360031b1b169291505056fea26469706673582212206825a01fd16d34b2e5a60b9ea3edc0676e44782f9ff3f95b10df9db3c80a6e4f64736f6c63430008140033",
    "sourceMap": "1043:2668:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1357:35;;;;;;;;160:25:36;;;148:2;133:18;1357:35:0;;;;;;;;2221:622;;;;;;:::i;:::-;;:::i;:::-;;3352:357;;;;;;:::i;:::-;;:::i;1141:17::-;;;:::i;:::-;;;;;;;:::i;1249:26::-;;;;;;;;;;;;;;;;:::i;856:41:22:-;;;;;;;;-1:-1:-1;;;;;3502:32:36;;;3484:51;;3472:2;3457:18;856:41:22;3316:225:36;2221:622:0;2367:10;2154:22:22;:20;:22::i;:::-;2186:39;2209:15;2186:22;:39::i;:::-;2590:3:0::1;2573:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;2563:32;;;;;;2532:9;2515:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;2505:38;;;;;;:90;2485:120;;;;:::i;:::-;2650:3;:15;2656:9:::0;2650:3;:15:::1;:::i;:::-;-1:-1:-1::0;2675:9:0::1;:17:::0;;2687:5;;2675:9;-1:-1:-1;;2675:17:0::1;:9:::0;2687:5;2675:17:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;2708:34;2721:9;2732;2708:34;;;;;;;:::i;:::-;;;;;;;;2769:17;2756:9;::::0;::::1;;:30;::::0;::::1;;;;;;:::i;:::-;;2752:85;;2816:9;::::0;2807:19:::1;::::0;::::1;::::0;::::1;::::0;2816:9:::1;::::0;;::::1;::::0;2807:19:::1;:::i;:::-;;;;;;;;2752:85;2221:622:::0;;;;:::o;3352:357::-;3426:17;3413:9;;;;:30;;;;;;;;:::i;:::-;;3409:83;;3459:22;;-1:-1:-1;;;3459:22:0;;7998:2:36;3459:22:0;;;7980:21:36;8037:2;8017:18;;;8010:30;-1:-1:-1;;;8056:18:36;;;8049:42;8108:18;;3459:22:0;;;;;;;;3409:83;3501:11;-1:-1:-1;;;;;3501:27:0;;3542:10;3577:3;3582:4;3566:21;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3566:21:0;;;;;;;;;;-1:-1:-1;;;;;;3628:25:0;3501:201;;;;;;;;;3609:4;;-1:-1:-1;;;3628:25:0;1606:6;;3501:201;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3352:357;:::o;1141:17::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1369:257:22:-;1471:10;-1:-1:-1;;;;;1517:11:22;1496:32;;;1492:128;;1551:58;;-1:-1:-1;;;1551:58:22;;-1:-1:-1;;;;;1578:11:22;10102:15:36;;1551:58:22;;;10084:34:36;10154:15;;10134:18;;;10127:43;10019:18;;1551:58:22;9828:348:36;1492:128:22;1415:211;1369:257::o;1701:277::-;1782:20;;1813:8;1822:20;1840:2;1813:8;1822:20;:::i;:::-;1813:31;;;;;:::i;:::-;1805:40;;;:::i;:::-;1782:63;;1878:12;1859:15;:31;1855:117;;1913:48;;-1:-1:-1;;;1913:48:22;;;;;11181:25:36;;;11222:18;;;11215:34;;;11154:18;;1913:48:22;11007:248:36;1855:117:22;1772:206;1701:277;:::o;196:127:36:-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:719;371:5;424:3;417:4;409:6;405:17;401:27;391:55;;442:1;439;432:12;391:55;478:6;465:20;504:18;541:2;537;534:10;531:36;;;547:18;;:::i;:::-;622:2;616:9;590:2;676:13;;-1:-1:-1;;672:22:36;;;696:2;668:31;664:40;652:53;;;720:18;;;740:22;;;717:46;714:72;;;766:18;;:::i;:::-;806:10;802:2;795:22;841:2;833:6;826:18;887:3;880:4;875:2;867:6;863:15;859:26;856:35;853:55;;;904:1;901;894:12;853:55;968:2;961:4;953:6;949:17;942:4;934:6;930:17;917:54;1015:1;1008:4;1003:2;995:6;991:15;987:26;980:37;1035:6;1026:15;;;;;;328:719;;;;:::o;1052:699::-;1161:6;1169;1177;1230:2;1218:9;1209:7;1205:23;1201:32;1198:52;;;1246:1;1243;1236:12;1198:52;1286:9;1273:23;1315:18;1356:2;1348:6;1345:14;1342:34;;;1372:1;1369;1362:12;1342:34;1395:50;1437:7;1428:6;1417:9;1413:22;1395:50;:::i;:::-;1385:60;;1498:2;1487:9;1483:18;1470:32;1454:48;;1527:2;1517:8;1514:16;1511:36;;;1543:1;1540;1533:12;1511:36;;1566:52;1610:7;1599:8;1588:9;1584:24;1566:52;:::i;:::-;1556:62;;;1668:2;1657:9;1653:18;1640:32;1701:1;1694:5;1691:12;1681:40;;1717:1;1714;1707:12;1681:40;1740:5;1730:15;;;1052:699;;;;;:::o;1756:322::-;1825:6;1878:2;1866:9;1857:7;1853:23;1849:32;1846:52;;;1894:1;1891;1884:12;1846:52;1934:9;1921:23;1967:18;1959:6;1956:30;1953:50;;;1999:1;1996;1989:12;1953:50;2022;2064:7;2055:6;2044:9;2040:22;2022:50;:::i;:::-;2012:60;1756:322;-1:-1:-1;;;;1756:322:36:o;2083:250::-;2168:1;2178:113;2192:6;2189:1;2186:13;2178:113;;;2268:11;;;2262:18;2249:11;;;2242:39;2214:2;2207:10;2178:113;;;-1:-1:-1;;2325:1:36;2307:16;;2300:27;2083:250::o;2338:271::-;2380:3;2418:5;2412:12;2445:6;2440:3;2433:19;2461:76;2530:6;2523:4;2518:3;2514:14;2507:4;2500:5;2496:16;2461:76;:::i;:::-;2591:2;2570:15;-1:-1:-1;;2566:29:36;2557:39;;;;2598:4;2553:50;;2338:271;-1:-1:-1;;2338:271:36:o;2614:220::-;2763:2;2752:9;2745:21;2726:4;2783:45;2824:2;2813:9;2809:18;2801:6;2783:45;:::i;:::-;2775:53;2614:220;-1:-1:-1;;;2614:220:36:o;2839:127::-;2900:10;2895:3;2891:20;2888:1;2881:31;2931:4;2928:1;2921:15;2955:4;2952:1;2945:15;2971:340;3115:2;3100:18;;3148:1;3137:13;;3127:144;;3193:10;3188:3;3184:20;3181:1;3174:31;3228:4;3225:1;3218:15;3256:4;3253:1;3246:15;3127:144;3280:25;;;2971:340;:::o;3546:380::-;3625:1;3621:12;;;;3668;;;3689:61;;3743:4;3735:6;3731:17;3721:27;;3689:61;3796:2;3788:6;3785:14;3765:18;3762:38;3759:161;;3842:10;3837:3;3833:20;3830:1;3823:31;3877:4;3874:1;3867:15;3905:4;3902:1;3895:15;3759:161;;3546:380;;;:::o;4057:842::-;4185:3;4214:1;4247:6;4241:13;4277:36;4303:9;4277:36;:::i;:::-;4332:1;4349:18;;;4376:133;;;;4523:1;4518:356;;;;4342:532;;4376:133;-1:-1:-1;;4409:24:36;;4397:37;;4482:14;;4475:22;4463:35;;4454:45;;;-1:-1:-1;4376:133:36;;4518:356;4549:6;4546:1;4539:17;4579:4;4624:2;4621:1;4611:16;4649:1;4663:165;4677:6;4674:1;4671:13;4663:165;;;4755:14;;4742:11;;;4735:35;4798:16;;;;4692:10;;4663:165;;;4667:3;;;4857:6;4852:3;4848:16;4841:23;;4342:532;-1:-1:-1;4890:3:36;;4057:842;-1:-1:-1;;;;;;4057:842:36:o;4904:289::-;5035:3;5073:6;5067:13;5089:66;5148:6;5143:3;5136:4;5128:6;5124:17;5089:66;:::i;:::-;5171:16;;;;;4904:289;-1:-1:-1;;4904:289:36:o;5198:127::-;5259:10;5254:3;5250:20;5247:1;5240:31;5290:4;5287:1;5280:15;5314:4;5311:1;5304:15;5330:545;5432:2;5427:3;5424:11;5421:448;;;5468:1;5493:5;5489:2;5482:17;5538:4;5534:2;5524:19;5608:2;5596:10;5592:19;5589:1;5585:27;5579:4;5575:38;5644:4;5632:10;5629:20;5626:47;;;-1:-1:-1;5667:4:36;5626:47;5722:2;5717:3;5713:12;5710:1;5706:20;5700:4;5696:31;5686:41;;5777:82;5795:2;5788:5;5785:13;5777:82;;;5840:17;;;5821:1;5810:13;5777:82;;;5781:3;;;5421:448;5330:545;;;:::o;6051:1352::-;6177:3;6171:10;6204:18;6196:6;6193:30;6190:56;;;6226:18;;:::i;:::-;6255:97;6345:6;6305:38;6337:4;6331:11;6305:38;:::i;:::-;6299:4;6255:97;:::i;:::-;6407:4;;6471:2;6460:14;;6488:1;6483:663;;;;7190:1;7207:6;7204:89;;;-1:-1:-1;7259:19:36;;;7253:26;7204:89;-1:-1:-1;;6008:1:36;6004:11;;;6000:24;5996:29;5986:40;6032:1;6028:11;;;5983:57;7306:81;;6453:944;;6483:663;4004:1;3997:14;;;4041:4;4028:18;;-1:-1:-1;;6519:20:36;;;6637:236;6651:7;6648:1;6645:14;6637:236;;;6740:19;;;6734:26;6719:42;;6832:27;;;;6800:1;6788:14;;;;6667:19;;6637:236;;;6641:3;6901:6;6892:7;6889:19;6886:201;;;6962:19;;;6956:26;-1:-1:-1;;7045:1:36;7041:14;;;7057:3;7037:24;7033:37;7029:42;7014:58;6999:74;;6886:201;-1:-1:-1;;;;;7133:1:36;7117:14;;;7113:22;7100:36;;-1:-1:-1;6051:1352:36:o;7408:383::-;7605:2;7594:9;7587:21;7568:4;7631:45;7672:2;7661:9;7657:18;7649:6;7631:45;:::i;:::-;7724:9;7716:6;7712:22;7707:2;7696:9;7692:18;7685:50;7752:33;7778:6;7770;7752:33;:::i;:::-;7744:41;7408:383;-1:-1:-1;;;;;7408:383:36:o;8137:1102::-;8331:2;8320:9;8313:21;8294:4;8354:1;8387:6;8381:13;8417:36;8443:9;8417:36;:::i;:::-;8489:6;8484:2;8473:9;8469:18;8462:34;8515:2;8536:1;8568:2;8557:9;8553:18;8585:1;8580:158;;;;8752:1;8747:381;;;;8546:582;;8580:158;-1:-1:-1;;8628:24:36;;8608:18;;;8601:52;8706:14;;8699:22;8696:1;8692:30;8677:46;;8673:55;;;-1:-1:-1;8580:158:36;;8747:381;8778:6;8775:1;8768:17;8808:4;8853:2;8850:1;8840:16;8878:1;8892:180;8906:6;8903:1;8900:13;8892:180;;;8999:14;;8975:17;;;8971:26;;8964:50;9042:16;;;;8921:10;;8892:180;;;9096:17;;9092:26;;;-1:-1:-1;;;8546:582:36;;;;;;9175:9;9170:3;9166:19;9159:4;9148:9;9144:20;9137:49;9203:30;9229:3;9221:6;9203:30;:::i;9244:579::-;9499:6;9488:9;9481:25;9542:3;9537:2;9526:9;9522:18;9515:31;9462:4;9563:46;9604:3;9593:9;9589:19;9581:6;9563:46;:::i;:::-;-1:-1:-1;;;;;9645:32:36;;;;9640:2;9625:18;;9618:60;-1:-1:-1;;;;;;;9714:33:36;;;;9709:2;9694:18;;9687:61;9797:18;9785:31;9779:3;9764:19;;;9757:60;9555:54;9244:579;-1:-1:-1;;9244:579:36:o;10181:225::-;10248:9;;;10269:11;;;10266:134;;;10322:10;10317:3;10313:20;10310:1;10303:31;10357:4;10354:1;10347:15;10385:4;10382:1;10375:15;10266:134;10181:225;;;;:::o;10411:331::-;10516:9;10527;10569:8;10557:10;10554:24;10551:44;;;10591:1;10588;10581:12;10551:44;10620:6;10610:8;10607:20;10604:40;;;10640:1;10637;10630:12;10604:40;-1:-1:-1;;10666:23:36;;;10711:25;;;;;-1:-1:-1;10411:331:36:o;10747:255::-;10867:19;;10906:2;10898:11;;10895:101;;;-1:-1:-1;;10967:2:36;10963:12;;;10960:1;10956:20;10952:33;10941:45;10747:255;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "22": [
        {
          "start": 108,
          "length": 32
        },
        {
          "start": 313,
          "length": 32
        },
        {
          "start": 797,
          "length": 32
        }
      ],
      "31089": [
        {
          "start": 253,
          "length": 32
        },
        {
          "start": 750,
          "length": 32
        },
        {
          "start": 1117,
          "length": 32
        },
        {
          "start": 1178,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "bonsaiRelay()": "e70ffd4b",
    "fen()": "945c3ce1",
    "fibImageId()": "13234edc",
    "gameState()": "d1f9c24d",
    "makeMove(string)": "9198eb7e",
    "updateBoard(string,string,uint8)": "2e993c83"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBonsaiRelay\",\"name\":\"bonsaiRelay\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_fibImageId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"contract IBonsaiRelay\",\"name\":\"expected\",\"type\":\"address\"},{\"internalType\":\"contract IBonsaiRelay\",\"name\":\"found\",\"type\":\"address\"}],\"name\":\"UnauthorizedCallbackSource\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"expected\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"found\",\"type\":\"bytes32\"}],\"name\":\"UnexpectedImageId\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevBoard\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"nextBoard\",\"type\":\"string\"}],\"name\":\"BoardUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum BonsaiChess.GameState\",\"name\":\"gameState\",\"type\":\"uint8\"}],\"name\":\"GameOver\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bonsaiRelay\",\"outputs\":[{\"internalType\":\"contract IBonsaiRelay\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fen\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fibImageId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameState\",\"outputs\":[{\"internalType\":\"enum BonsaiChess.GameState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"move\",\"type\":\"string\"}],\"name\":\"makeMove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"prevBoard\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nextBoard\",\"type\":\"string\"},{\"internalType\":\"enum BonsaiChess.GameState\",\"name\":\"state\",\"type\":\"uint8\"}],\"name\":\"updateBoard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract demonstrates one pattern for offloading the computation of an expensive\",\"kind\":\"dev\",\"methods\":{\"makeMove(string)\":{\"details\":\"This function sends the request to Bonsai through the on-chain relay.      The request will trigger Bonsai to run the specified RISC Zero guest program with      the given input and asynchronously return the verified results via the callback below.\"}},\"stateVariables\":{\"BONSAI_CALLBACK_GAS_LIMIT\":{\"details\":\"Should be set to the maximum amount of gas your callback might reasonably consume.\"}},\"title\":\"A starter application using Bonsai through the on-chain relay.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initialize the contract, binding it to a specified Bonsai relay and RISC Zero guest image.\"},\"fen()\":{\"notice\":\"board state in FEN notation.\"},\"fibImageId()\":{\"notice\":\"Image ID of the only zkVM binary to accept callbacks from.\"},\"makeMove(string)\":{\"notice\":\"Sends a request to Bonsai generate an engine chess move in response to the move         submitted to this function. This move should be formatted in UCI notation         (e.g. \\\"e2e4\\\", \\\"b1c3\\\").\"},\"updateBoard(string,string,uint8)\":{\"notice\":\"Callback function logic for processing verified journals from Bonsai.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BonsaiChess.sol\":\"BonsaiChess\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":bonsai/=lib/risc0/bonsai/ethereum/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":murky_differential_testing/=lib/murky/differential_testing/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":risc0/=lib/risc0/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/\"]},\"sources\":{\"contracts/BonsaiChess.sol\":{\"keccak256\":\"0x37a148aa50d3db2de7b9e82e805dc38eacefe738b4c236b491d632c6e188243b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://da3662acd7d863644842faccd357690a4d4df84899b106ed7ab35577ad3c4a85\",\"dweb:/ipfs/QmVt45ZptnqykTPXaU1JFMNMeGWDHe2XV83jF1Ed7hSzHZ\"]},\"lib/risc0/bonsai/ethereum/contracts/BonsaiCallbackReceiver.sol\":{\"keccak256\":\"0x731a508688c7e6aed6c2b887cf9b78f51bd3d61ab8f33f49d2ae76252002e8b3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0422daeb5bf8307cf426ffb5a772ea4f3acf5270900aa05446e28a995e058797\",\"dweb:/ipfs/QmaSngFoBZtdKBwa2jtk2iSDfod25JvacF3NcpjLN4RgyZ\"]},\"lib/risc0/bonsai/ethereum/contracts/IBonsaiRelay.sol\":{\"keccak256\":\"0x572745471df585157d0bfaca2ddff54880600fe2c86f789721126e2ff233bddf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://10fffd6023d2c63b79d4ae6e92d3d53a9d7f7b16e8208c6335ed6d0415ed5552\",\"dweb:/ipfs/QmR6KxrM6EzC5Rh1qmGrv7A8YAfmp6ZU1tYYW12jfdopKM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IBonsaiRelay",
              "name": "bonsaiRelay",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_fibImageId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "contract IBonsaiRelay",
              "name": "expected",
              "type": "address"
            },
            {
              "internalType": "contract IBonsaiRelay",
              "name": "found",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "UnauthorizedCallbackSource"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "expected",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "found",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnexpectedImageId"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevBoard",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "nextBoard",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BoardUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum BonsaiChess.GameState",
              "name": "gameState",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GameOver",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bonsaiRelay",
          "outputs": [
            {
              "internalType": "contract IBonsaiRelay",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fen",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fibImageId",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gameState",
          "outputs": [
            {
              "internalType": "enum BonsaiChess.GameState",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "move",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeMove"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "prevBoard",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "nextBoard",
              "type": "string"
            },
            {
              "internalType": "enum BonsaiChess.GameState",
              "name": "state",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateBoard"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "makeMove(string)": {
            "details": "This function sends the request to Bonsai through the on-chain relay.      The request will trigger Bonsai to run the specified RISC Zero guest program with      the given input and asynchronously return the verified results via the callback below."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Initialize the contract, binding it to a specified Bonsai relay and RISC Zero guest image."
          },
          "fen()": {
            "notice": "board state in FEN notation."
          },
          "fibImageId()": {
            "notice": "Image ID of the only zkVM binary to accept callbacks from."
          },
          "makeMove(string)": {
            "notice": "Sends a request to Bonsai generate an engine chess move in response to the move         submitted to this function. This move should be formatted in UCI notation         (e.g. \"e2e4\", \"b1c3\")."
          },
          "updateBoard(string,string,uint8)": {
            "notice": "Callback function logic for processing verified journals from Bonsai."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":bonsai/=lib/risc0/bonsai/ethereum/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":murky/=lib/murky/src/",
        ":murky_differential_testing/=lib/murky/differential_testing/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/",
        ":risc0/=lib/risc0/",
        ":solidity-bytes-utils/=lib/solidity-bytes-utils/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/BonsaiChess.sol": "BonsaiChess"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/BonsaiChess.sol": {
        "keccak256": "0x37a148aa50d3db2de7b9e82e805dc38eacefe738b4c236b491d632c6e188243b",
        "urls": [
          "bzz-raw://da3662acd7d863644842faccd357690a4d4df84899b106ed7ab35577ad3c4a85",
          "dweb:/ipfs/QmVt45ZptnqykTPXaU1JFMNMeGWDHe2XV83jF1Ed7hSzHZ"
        ],
        "license": "Apache-2.0"
      },
      "lib/risc0/bonsai/ethereum/contracts/BonsaiCallbackReceiver.sol": {
        "keccak256": "0x731a508688c7e6aed6c2b887cf9b78f51bd3d61ab8f33f49d2ae76252002e8b3",
        "urls": [
          "bzz-raw://0422daeb5bf8307cf426ffb5a772ea4f3acf5270900aa05446e28a995e058797",
          "dweb:/ipfs/QmaSngFoBZtdKBwa2jtk2iSDfod25JvacF3NcpjLN4RgyZ"
        ],
        "license": "Apache-2.0"
      },
      "lib/risc0/bonsai/ethereum/contracts/IBonsaiRelay.sol": {
        "keccak256": "0x572745471df585157d0bfaca2ddff54880600fe2c86f789721126e2ff233bddf",
        "urls": [
          "bzz-raw://10fffd6023d2c63b79d4ae6e92d3d53a9d7f7b16e8208c6335ed6d0415ed5552",
          "dweb:/ipfs/QmR6KxrM6EzC5Rh1qmGrv7A8YAfmp6ZU1tYYW12jfdopKM"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/BonsaiChess.sol",
    "id": 158,
    "exportedSymbols": {
      "BonsaiCallbackReceiver": [
        31184
      ],
      "BonsaiChess": [
        157
      ],
      "IBonsaiRelay": [
        32619
      ]
    },
    "nodeType": "SourceUnit",
    "src": "635:3077:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "635:24:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "661:53:0",
        "nodes": [],
        "absolutePath": "lib/risc0/bonsai/ethereum/contracts/IBonsaiRelay.sol",
        "file": "bonsai/IBonsaiRelay.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 158,
        "sourceUnit": 32620,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "IBonsaiRelay",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32619,
              "src": "669:12:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "715:73:0",
        "nodes": [],
        "absolutePath": "lib/risc0/bonsai/ethereum/contracts/BonsaiCallbackReceiver.sol",
        "file": "bonsai/BonsaiCallbackReceiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 158,
        "sourceUnit": 31185,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "BonsaiCallbackReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31184,
              "src": "723:22:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 157,
        "nodeType": "ContractDefinition",
        "src": "1043:2668:0",
        "nodes": [
          {
            "id": 11,
            "nodeType": "VariableDeclaration",
            "src": "1141:17:0",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 9,
              "nodeType": "StructuredDocumentation",
              "src": "1096:40:0",
              "text": "@notice board state in FEN notation."
            },
            "functionSelector": "945c3ce1",
            "mutability": "mutable",
            "name": "fen",
            "nameLocation": "1155:3:0",
            "scope": 157,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 10,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1141:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 16,
            "nodeType": "EnumDefinition",
            "src": "1165:79:0",
            "nodes": [],
            "canonicalName": "BonsaiChess.GameState",
            "members": [
              {
                "id": 12,
                "name": "Ongoing",
                "nameLocation": "1190:7:0",
                "nodeType": "EnumValue",
                "src": "1190:7:0"
              },
              {
                "id": 13,
                "name": "Win",
                "nameLocation": "1207:3:0",
                "nodeType": "EnumValue",
                "src": "1207:3:0"
              },
              {
                "id": 14,
                "name": "Lose",
                "nameLocation": "1220:4:0",
                "nodeType": "EnumValue",
                "src": "1220:4:0"
              },
              {
                "id": 15,
                "name": "Draw",
                "nameLocation": "1234:4:0",
                "nodeType": "EnumValue",
                "src": "1234:4:0"
              }
            ],
            "name": "GameState",
            "nameLocation": "1170:9:0"
          },
          {
            "id": 19,
            "nodeType": "VariableDeclaration",
            "src": "1249:26:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "d1f9c24d",
            "mutability": "mutable",
            "name": "gameState",
            "nameLocation": "1266:9:0",
            "scope": 157,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_GameState_$16",
              "typeString": "enum BonsaiChess.GameState"
            },
            "typeName": {
              "id": 18,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 17,
                "name": "GameState",
                "nameLocations": [
                  "1249:9:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 16,
                "src": "1249:9:0"
              },
              "referencedDeclaration": 16,
              "src": "1249:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_GameState_$16",
                "typeString": "enum BonsaiChess.GameState"
              }
            },
            "visibility": "public"
          },
          {
            "id": 22,
            "nodeType": "VariableDeclaration",
            "src": "1357:35:0",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 20,
              "nodeType": "StructuredDocumentation",
              "src": "1282:70:0",
              "text": "@notice Image ID of the only zkVM binary to accept callbacks from."
            },
            "functionSelector": "13234edc",
            "mutability": "immutable",
            "name": "fibImageId",
            "nameLocation": "1382:10:0",
            "scope": 157,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 21,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1357:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 26,
            "nodeType": "VariableDeclaration",
            "src": "1554:58:0",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 23,
              "nodeType": "StructuredDocumentation",
              "src": "1399:150:0",
              "text": "@notice Gas limit set on the callback from Bonsai.\n @dev Should be set to the maximum amount of gas your callback might reasonably consume."
            },
            "mutability": "constant",
            "name": "BONSAI_CALLBACK_GAS_LIMIT",
            "nameLocation": "1578:25:0",
            "scope": 157,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 24,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "1554:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "313030303030",
              "id": 25,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1606:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000_by_1",
                "typeString": "int_const 100000"
              },
              "value": "100000"
            },
            "visibility": "private"
          },
          {
            "id": 55,
            "nodeType": "FunctionDefinition",
            "src": "1726:301:0",
            "nodes": [],
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "1843:184:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 38,
                      "name": "fibImageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1853:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 39,
                      "name": "_fibImageId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1866:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1853:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "1853:24:0"
                },
                {
                  "expression": {
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42,
                      "name": "fen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1887:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "726e62716b626e722f70707070707070702f382f382f382f382f50505050505050502f524e42514b424e522077204b516b71202d20302031",
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1913:58:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_0e50e9acadcdd5cb812487617c7e8a6fa097e7a60abf6cd76c9d12c8e132035a",
                            "typeString": "literal_string \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\""
                          },
                          "value": "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_0e50e9acadcdd5cb812487617c7e8a6fa097e7a60abf6cd76c9d12c8e132035a",
                            "typeString": "literal_string \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\""
                          }
                        ],
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1893:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 43,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1893:6:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1893:88:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1887:94:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "1887:94:0"
                },
                {
                  "expression": {
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49,
                      "name": "gameState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1991:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$16",
                        "typeString": "enum BonsaiChess.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 50,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2003:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$16_$",
                          "typeString": "type(enum BonsaiChess.GameState)"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2013:7:0",
                      "memberName": "Ongoing",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "2003:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$16",
                        "typeString": "enum BonsaiChess.GameState"
                      }
                    },
                    "src": "1991:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$16",
                      "typeString": "enum BonsaiChess.GameState"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "1991:29:0"
                }
              ]
            },
            "documentation": {
              "id": 27,
              "nodeType": "StructuredDocumentation",
              "src": "1619:102:0",
              "text": "@notice Initialize the contract, binding it to a specified Bonsai relay and RISC Zero guest image."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 35,
                    "name": "bonsaiRelay",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30,
                    "src": "1830:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBonsaiRelay_$32619",
                      "typeString": "contract IBonsaiRelay"
                    }
                  }
                ],
                "id": 36,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 34,
                  "name": "BonsaiCallbackReceiver",
                  "nameLocations": [
                    "1807:22:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31184,
                  "src": "1807:22:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1807:35:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "bonsaiRelay",
                  "nameLocation": "1760:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1747:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBonsaiRelay_$32619",
                    "typeString": "contract IBonsaiRelay"
                  },
                  "typeName": {
                    "id": 29,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28,
                      "name": "IBonsaiRelay",
                      "nameLocations": [
                        "1747:12:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32619,
                      "src": "1747:12:0"
                    },
                    "referencedDeclaration": 32619,
                    "src": "1747:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBonsaiRelay_$32619",
                      "typeString": "contract IBonsaiRelay"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_fibImageId",
                  "nameLocation": "1789:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "1781:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1781:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1737:69:0"
            },
            "returnParameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1843:0:0"
            },
            "scope": 157,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 61,
            "nodeType": "EventDefinition",
            "src": "2033:55:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "9a5329d1afc984b4987592b22a021e2385e3dcd38e74fb9f27285948442181f8",
            "name": "BoardUpdated",
            "nameLocation": "2039:12:0",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "prevBoard",
                  "nameLocation": "2059:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "2052:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2052:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nextBoard",
                  "nameLocation": "2077:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "2070:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2070:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2051:36:0"
            }
          },
          {
            "id": 66,
            "nodeType": "EventDefinition",
            "src": "2093:36:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e30a7197f4bcf77a0500f4d49e711083bfc4107c06942bf9ca7dd2d678fefab7",
            "name": "GameOver",
            "nameLocation": "2099:8:0",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gameState",
                  "nameLocation": "2118:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "2108:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_GameState_$16",
                    "typeString": "enum BonsaiChess.GameState"
                  },
                  "typeName": {
                    "id": 63,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62,
                      "name": "GameState",
                      "nameLocations": [
                        "2108:9:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16,
                      "src": "2108:9:0"
                    },
                    "referencedDeclaration": 16,
                    "src": "2108:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$16",
                      "typeString": "enum BonsaiChess.GameState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2107:21:0"
            }
          },
          {
            "id": 120,
            "nodeType": "FunctionDefinition",
            "src": "2221:622:0",
            "nodes": [],
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "2379:464:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 93,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 84,
                                  "name": "prevBoard",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69,
                                  "src": "2532:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 82,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2515:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 83,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2519:12:0",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "2515:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 85,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2515:27:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 81,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "2505:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2505:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 90,
                                  "name": "fen",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11,
                                  "src": "2590:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "expression": {
                                  "id": 88,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2573:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 89,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2577:12:0",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "2573:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 91,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2573:21:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 87,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "2563:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2563:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2505:90:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 80,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2485:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2485:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "2485:120:0"
                },
                {
                  "expression": {
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 96,
                      "name": "fen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2650:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 97,
                      "name": "nextBoard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "2656:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2650:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "2650:15:0"
                },
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100,
                      "name": "gameState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "2675:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$16",
                        "typeString": "enum BonsaiChess.GameState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 101,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "2687:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$16",
                        "typeString": "enum BonsaiChess.GameState"
                      }
                    },
                    "src": "2675:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$16",
                      "typeString": "enum BonsaiChess.GameState"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "2675:17:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 105,
                        "name": "prevBoard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "2721:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 106,
                        "name": "nextBoard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "2732:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 104,
                      "name": "BoardUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "2708:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2708:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "EmitStatement",
                  "src": "2703:39:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_GameState_$16",
                      "typeString": "enum BonsaiChess.GameState"
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 109,
                      "name": "gameState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "2756:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$16",
                        "typeString": "enum BonsaiChess.GameState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 110,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "2769:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$16_$",
                          "typeString": "type(enum BonsaiChess.GameState)"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2779:7:0",
                      "memberName": "Ongoing",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "2769:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$16",
                        "typeString": "enum BonsaiChess.GameState"
                      }
                    },
                    "src": "2756:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 118,
                  "nodeType": "IfStatement",
                  "src": "2752:85:0",
                  "trueBody": {
                    "id": 117,
                    "nodeType": "Block",
                    "src": "2788:49:0",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 114,
                              "name": "gameState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19,
                              "src": "2816:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_GameState_$16",
                                "typeString": "enum BonsaiChess.GameState"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_GameState_$16",
                                "typeString": "enum BonsaiChess.GameState"
                              }
                            ],
                            "id": 113,
                            "name": "GameOver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "2807:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_enum$_GameState_$16_$returns$__$",
                              "typeString": "function (enum BonsaiChess.GameState)"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2807:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 116,
                        "nodeType": "EmitStatement",
                        "src": "2802:24:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 67,
              "nodeType": "StructuredDocumentation",
              "src": "2135:81:0",
              "text": "@notice Callback function logic for processing verified journals from Bonsai."
            },
            "functionSelector": "2e993c83",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 77,
                    "name": "fibImageId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22,
                    "src": "2367:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 78,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 76,
                  "name": "onlyBonsaiCallback",
                  "nameLocations": [
                    "2348:18:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31183,
                  "src": "2348:18:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2348:30:0"
              }
            ],
            "name": "updateBoard",
            "nameLocation": "2230:11:0",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "prevBoard",
                  "nameLocation": "2265:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "2251:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2251:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "nextBoard",
                  "nameLocation": "2298:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "2284:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2284:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "2327:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "2317:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_GameState_$16",
                    "typeString": "enum BonsaiChess.GameState"
                  },
                  "typeName": {
                    "id": 73,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 72,
                      "name": "GameState",
                      "nameLocations": [
                        "2317:9:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16,
                      "src": "2317:9:0"
                    },
                    "referencedDeclaration": 16,
                    "src": "2317:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GameState_$16",
                      "typeString": "enum BonsaiChess.GameState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2241:97:0"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2379:0:0"
            },
            "scope": 157,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 156,
            "nodeType": "FunctionDefinition",
            "src": "3352:357:0",
            "nodes": [],
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "3399:310:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_GameState_$16",
                      "typeString": "enum BonsaiChess.GameState"
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 126,
                      "name": "gameState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "3413:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$16",
                        "typeString": "enum BonsaiChess.GameState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 127,
                        "name": "GameState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "3426:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GameState_$16_$",
                          "typeString": "type(enum BonsaiChess.GameState)"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3436:7:0",
                      "memberName": "Ongoing",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12,
                      "src": "3426:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GameState_$16",
                        "typeString": "enum BonsaiChess.GameState"
                      }
                    },
                    "src": "3413:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 135,
                  "nodeType": "IfStatement",
                  "src": "3409:83:0",
                  "trueBody": {
                    "id": 134,
                    "nodeType": "Block",
                    "src": "3445:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "67616d65206973206f766572",
                              "id": 131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3466:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_10c443d150048792860ca4ea2b6f211ed7d459c0c688ae31d72ab9d18710a338",
                                "typeString": "literal_string \"game is over\""
                              },
                              "value": "game is over"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_10c443d150048792860ca4ea2b6f211ed7d459c0c688ae31d72ab9d18710a338",
                                "typeString": "literal_string \"game is over\""
                              }
                            ],
                            "id": 130,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "3459:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3459:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 133,
                        "nodeType": "ExpressionStatement",
                        "src": "3459:22:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 139,
                        "name": "fibImageId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "3542:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 142,
                            "name": "fen",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "3577:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "id": 143,
                            "name": "move",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "3582:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 140,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3566:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3570:6:0",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "3566:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3566:21:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 147,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3609:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BonsaiChess_$157",
                              "typeString": "contract BonsaiChess"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BonsaiChess_$157",
                              "typeString": "contract BonsaiChess"
                            }
                          ],
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3601:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 145,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3601:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3601:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 149,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3628:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BonsaiChess_$157",
                              "typeString": "contract BonsaiChess"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3633:11:0",
                          "memberName": "updateBoard",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 120,
                          "src": "3628:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_enum$_GameState_$16_$returns$__$",
                            "typeString": "function (string memory,string memory,enum BonsaiChess.GameState) external"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3645:8:0",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "3628:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      {
                        "id": 152,
                        "name": "BONSAI_CALLBACK_GAS_LIMIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "3667:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 136,
                        "name": "bonsaiRelay",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31089,
                        "src": "3501:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBonsaiRelay_$32619",
                          "typeString": "contract IBonsaiRelay"
                        }
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3513:15:0",
                      "memberName": "requestCallback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32587,
                      "src": "3501:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_bytes4_$_t_uint64_$returns$__$",
                        "typeString": "function (bytes32,bytes memory,address,bytes4,uint64) external"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3501:201:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "3501:201:0"
                }
              ]
            },
            "documentation": {
              "id": 121,
              "nodeType": "StructuredDocumentation",
              "src": "2849:498:0",
              "text": "@notice Sends a request to Bonsai generate an engine chess move in response to the move\n         submitted to this function. This move should be formatted in UCI notation\n         (e.g. \"e2e4\", \"b1c3\").\n @dev This function sends the request to Bonsai through the on-chain relay.\n      The request will trigger Bonsai to run the specified RISC Zero guest program with\n      the given input and asynchronously return the verified results via the callback below."
            },
            "functionSelector": "9198eb7e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makeMove",
            "nameLocation": "3361:8:0",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "move",
                  "nameLocation": "3384:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "3370:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3370:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3369:20:0"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3399:0:0"
            },
            "scope": 157,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "BonsaiCallbackReceiver",
              "nameLocations": [
                "1067:22:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31184,
              "src": "1067:22:0"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "1067:22:0"
          }
        ],
        "canonicalName": "BonsaiChess",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6,
          "nodeType": "StructuredDocumentation",
          "src": "790:169:0",
          "text": "@title A starter application using Bonsai through the on-chain relay.\n @dev This contract demonstrates one pattern for offloading the computation of an expensive"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          157,
          31184
        ],
        "name": "BonsaiChess",
        "nameLocation": "1052:11:0",
        "scope": 158,
        "usedErrors": [
          31095,
          31103
        ],
        "usedEvents": [
          61,
          66
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 0
}